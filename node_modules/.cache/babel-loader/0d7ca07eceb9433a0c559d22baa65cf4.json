{"ast":null,"code":"var _jsxFileName = \"/Users/connor/Documents/React Projects/cbsi/src/components/ScrollableArea.js\";\nimport React from 'react';\nimport Modal from './Modal';\nexport class ScrollableArea extends React.Component {\n  render() {\n    const scrollableArea = {\n      background: 'rgba(44,42,41)'\n    };\n    const scAreaHeading = {\n      color: '#fff',\n      fontSize: '2.5vw',\n      fontWeight: '100',\n      letterSpacing: '2px',\n      margin: '20px 0 0 0',\n      WebkitTextStrokeWidth: '1px',\n      WebkitTextStrokeColor: '#eff',\n      textShadow: '1px 1px rgba( 0, 0, 0, .3 )'\n    };\n    const scrollableAreaCont = {\n      // background: 'linear-gradient(0deg, rgba(195,212,223,1) 25%, rgba(137,141,149,1) 75%)',\n      display: 'block',\n      overflowX: 'scroll',\n      overflowY: 'none',\n      minHeight: '250px',\n      overflow: 'auto',\n      padding: '15px 0 15px 0',\n      margin: '5px 3vw 40px 3vw',\n      borderRadius: '3px',\n      borderRight: '3px solid linear-gradient(0deg, rgba(195,212,223,1) 25%, rgba(137,141,149,1) 75%)'\n    };\n    const scrollableAreaContFlex = {\n      display: 'flex',\n      justifyContent: 'space-between',\n      height: 'inherit'\n    };\n    var dataArr = []; //  Grabs data from the props.jsonData file and pushes each modal object into the dataArr array.\n\n    /*  \n        I feel like this needs an explanation:\n            This was done so that later on, I can set up a CMS for CBSI to update their site more easily. Eventually, Ill populate\n            that props.jsonData file using CMS options for any user grated such privelages. For now, it doesnt cause  any\n            performance issues, and will stay this way until the CMS portion is completed.\n             The modals are currently entirely created and populated using data from the props.jsonData file. \n    */\n\n    Object.keys(this.props.jsonData).forEach(key => dataArr.push(this.props.jsonData[key]));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: scrollableArea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: scAreaHeading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, this.props.heading), /*#__PURE__*/React.createElement(\"div\", {\n      style: scrollableAreaCont,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: scrollableAreaContFlex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, //Output a Modal component for each object in dataArr\n    dataArr.map(item => /*#__PURE__*/React.createElement(Modal, {\n      key: item.id,\n      image: item.image,\n      heading: item.heading,\n      text: item.text,\n      buttonTxt: item.buttonTxt,\n      link: item.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\nexport default ScrollableArea;","map":{"version":3,"sources":["/Users/connor/Documents/React Projects/cbsi/src/components/ScrollableArea.js"],"names":["React","Modal","ScrollableArea","Component","render","scrollableArea","background","scAreaHeading","color","fontSize","fontWeight","letterSpacing","margin","WebkitTextStrokeWidth","WebkitTextStrokeColor","textShadow","scrollableAreaCont","display","overflowX","overflowY","minHeight","overflow","padding","borderRadius","borderRight","scrollableAreaContFlex","justifyContent","height","dataArr","Object","keys","props","jsonData","forEach","key","push","heading","map","item","id","image","text","buttonTxt","link"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AAEhDC,EAAAA,MAAM,GAAG;AACL,UAAMC,cAAc,GAAG;AACnBC,MAAAA,UAAU,EAAE;AADO,KAAvB;AAIA,UAAMC,aAAa,GAAG;AAClBC,MAAAA,KAAK,EAAE,MADW;AAElBC,MAAAA,QAAQ,EAAE,OAFQ;AAGlBC,MAAAA,UAAU,EAAE,KAHM;AAIlBC,MAAAA,aAAa,EAAE,KAJG;AAKlBC,MAAAA,MAAM,EAAE,YALU;AAMlBC,MAAAA,qBAAqB,EAAE,KANL;AAOlBC,MAAAA,qBAAqB,EAAE,MAPL;AAQlBC,MAAAA,UAAU,EAAE;AARM,KAAtB;AAYA,UAAMC,kBAAkB,GAAG;AACvB;AACAC,MAAAA,OAAO,EAAE,OAFc;AAGvBC,MAAAA,SAAS,EAAE,QAHY;AAIvBC,MAAAA,SAAS,EAAE,MAJY;AAKvBC,MAAAA,SAAS,EAAE,OALY;AAMvBC,MAAAA,QAAQ,EAAE,MANa;AAOvBC,MAAAA,OAAO,EAAE,eAPc;AAQvBV,MAAAA,MAAM,EAAE,kBARe;AASvBW,MAAAA,YAAY,EAAE,KATS;AAUvBC,MAAAA,WAAW,EAAE;AAVU,KAA3B;AAeA,UAAMC,sBAAsB,GAAG;AAC3BR,MAAAA,OAAO,EAAE,MADkB;AAE3BS,MAAAA,cAAc,EAAE,eAFW;AAG3BC,MAAAA,MAAM,EAAE;AAHmB,KAA/B;AAMA,QAAIC,OAAO,GAAG,EAAd,CAtCK,CAwCL;;AACA;;;;;;;;AAQAC,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,QAAvB,EAAiCC,OAAjC,CAAyCC,GAAG,IAAIN,OAAO,CAACO,IAAR,CAAa,KAAKJ,KAAL,CAAWC,QAAX,CAAoBE,GAApB,CAAb,CAAhD;AAEA,wBACI,uDACA;AAAK,MAAA,KAAK,EAAG7B,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAGE,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKwB,KAAL,CAAWK,OAAxC,CADJ,eAEI;AAAK,MAAA,KAAK,EAAGpB,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAGS,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ;AACAG,IAAAA,OAAO,CAACS,GAAR,CAAYC,IAAI,iBACZ,oBAAC,KAAD;AACI,MAAA,GAAG,EAAGA,IAAI,CAACC,EADf;AAEI,MAAA,KAAK,EAAGD,IAAI,CAACE,KAFjB;AAGI,MAAA,OAAO,EAAGF,IAAI,CAACF,OAHnB;AAII,MAAA,IAAI,EAAGE,IAAI,CAACG,IAJhB;AAKI,MAAA,SAAS,EAAGH,IAAI,CAACI,SALrB;AAMI,MAAA,IAAI,EAAGJ,IAAI,CAACK,IANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHR,CADJ,CAFJ,CADA,CADJ;AAwBH;;AA7E+C;AAgFpD,eAAezC,cAAf","sourcesContent":["import React from 'react';\nimport Modal from './Modal';\n\nexport class ScrollableArea extends React.Component {\n\n    render() {\n        const scrollableArea = {\n            background: 'rgba(44,42,41)',\n        }\n\n        const scAreaHeading = {\n            color: '#fff',\n            fontSize: '2.5vw',\n            fontWeight: '100',\n            letterSpacing: '2px',\n            margin: '20px 0 0 0',\n            WebkitTextStrokeWidth: '1px',\n            WebkitTextStrokeColor: '#eff',\n            textShadow: '1px 1px rgba( 0, 0, 0, .3 )',\n\n        }\n\n        const scrollableAreaCont = {\n            // background: 'linear-gradient(0deg, rgba(195,212,223,1) 25%, rgba(137,141,149,1) 75%)',\n            display: 'block',\n            overflowX: 'scroll',\n            overflowY: 'none',\n            minHeight: '250px',\n            overflow: 'auto',\n            padding: '15px 0 15px 0',\n            margin: '5px 3vw 40px 3vw',\n            borderRadius: '3px',\n            borderRight: '3px solid linear-gradient(0deg, rgba(195,212,223,1) 25%, rgba(137,141,149,1) 75%)',\n\n            \n        }\n        \n        const scrollableAreaContFlex = {\n            display: 'flex',\n            justifyContent: 'space-between',\n            height: 'inherit',\n        }\n\n        var dataArr = [];\n\n        //  Grabs data from the props.jsonData file and pushes each modal object into the dataArr array.\n        /*  \n            I feel like this needs an explanation:\n                This was done so that later on, I can set up a CMS for CBSI to update their site more easily. Eventually, Ill populate\n                that props.jsonData file using CMS options for any user grated such privelages. For now, it doesnt cause  any\n                performance issues, and will stay this way until the CMS portion is completed.\n\n                The modals are currently entirely created and populated using data from the props.jsonData file. \n        */\n        Object.keys(this.props.jsonData).forEach(key => dataArr.push(this.props.jsonData[key]));\n\n        return (\n            <>\n            <div style={ scrollableArea }>\n                <h1 style={ scAreaHeading }>{this.props.heading}</h1>\n                <div style={ scrollableAreaCont }>\n                    <div style={ scrollableAreaContFlex }>\n                        {\n                            //Output a Modal component for each object in dataArr\n                            dataArr.map(item => \n                                <Modal \n                                    key={ item.id }\n                                    image={ item.image } \n                                    heading={ item.heading } \n                                    text={ item.text } \n                                    buttonTxt={ item.buttonTxt } \n                                    link={ item.link }\n                                />\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default ScrollableArea;\n"]},"metadata":{},"sourceType":"module"}