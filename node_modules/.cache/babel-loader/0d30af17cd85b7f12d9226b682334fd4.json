{"ast":null,"code":"var _jsxFileName = \"/Users/connor/Documents/cbsi-front-facing-website/src/components/EmailForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nconst emailFormCont = {};\nconst errorMsgBlock = {\n  background: 'rgba(255, 0, 0, .25)',\n  padding: '.5vw',\n  borderRadius: '5px',\n  margin: '0 0 2vw 0',\n  display: 'inline-block'\n};\nconst error = {\n  color: 'red',\n  fontSize: '2vw',\n  fontWeight: '400',\n  margin: '.5vw'\n};\nconst heading = {\n  fontSize: '3vw',\n  fontWeight: '400',\n  margin: '2vw 0'\n};\nconst form = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center'\n};\nconst textInput = {\n  background: '#eee',\n  color: 'black',\n  width: '40vw',\n  height: '4vw',\n  margin: '1.7vw 5vw',\n  fontSize: '2vw',\n  border: '2px solid black',\n  borderRadius: '10px',\n  padding: '0 1vw 0 1vw'\n};\nconst textarea = {\n  background: '#eee',\n  color: 'black',\n  resize: 'none',\n  width: '40vw',\n  margin: '3vw 5vw',\n  fontSize: '2vw',\n  border: '2px solid black',\n  borderRadius: '10px',\n  padding: '1vw 1vw 1vw 1vw'\n};\nconst submitBtn = {\n  background: 'rgb(166, 25, 46)',\n  color: 'white',\n  width: '20vw',\n  height: '4vw',\n  margin: '0 0 3vw 0',\n  fontSize: '2vw',\n  border: '2px solid black',\n  borderRadius: '100px'\n};\nconst confirmationMessage = {\n  background: 'rgba(0,230,0,.4)',\n  color: 'white',\n  width: '200px',\n  height: '74px',\n  borderRadius: '20px',\n  fontSize: '30px',\n  fontWeight: '400',\n  letterSpacing: '3px',\n  // display: 'none',\n  justifyContent: 'center',\n  alignItems: 'center',\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  margin: '-37px 0 0 -100px'\n};\nconst confirmImg = {\n  width: '30px',\n  height: '40px',\n  margin: '0 2vw'\n};\n\nfunction EmailForm(props) {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    window.addEventListener('resize', () => setWindowWidth(window.innerWidth));\n  }, []); // Responsive Style changes \n\n  var headingSm;\n  var textInputSm;\n  var textareaSm;\n  var submitBtnSm;\n  var errorMsgBlockSm;\n  var errorSm;\n  var confirmationMessageSm;\n  var confirmImgSm;\n\n  if (windowWidth < 600) {\n    headingSm = {\n      fontSize: '5vw',\n      fontWeight: '400',\n      margin: '6vw 0 3vw 0'\n    };\n    textInputSm = {\n      background: '#eee',\n      color: 'black',\n      width: '80%',\n      height: '6vw',\n      margin: '3vw 5vw',\n      fontSize: '3vw',\n      border: '2px solid black',\n      borderRadius: '10px',\n      padding: '0 1vw 0 1vw'\n    };\n    textareaSm = {\n      background: '#eee',\n      color: 'black',\n      resize: 'none',\n      width: '80%',\n      margin: '3vw 5vw',\n      fontSize: '3vw',\n      border: '2px solid black',\n      borderRadius: '10px',\n      padding: '1vw 1vw 1vw 1vw'\n    };\n    submitBtnSm = {\n      background: 'rgb(166, 25, 46)',\n      color: 'white',\n      width: '50%',\n      height: '7vw',\n      margin: '3vw 5vw',\n      fontSize: '4vw',\n      border: '2px solid black',\n      borderRadius: '100px'\n    };\n    errorMsgBlockSm = {\n      width: '40%',\n      background: 'rgba(255, 0, 0, .25)',\n      padding: '.5vw',\n      borderRadius: '5px',\n      margin: '0 0 2vw 0',\n      display: 'inline-block'\n    };\n    errorSm = {\n      color: 'red',\n      fontSize: '3vw',\n      fontWeight: '400',\n      margin: '.7vw'\n    };\n    confirmationMessageSm = {\n      background: 'rgba(0,230,0,.4)',\n      color: 'white',\n      width: '200px',\n      height: '74px',\n      borderRadius: '20px',\n      fontSize: '30px',\n      fontWeight: '400',\n      letterSpacing: '3px',\n      display: 'none',\n      justifyContent: 'center',\n      alignItems: 'center',\n      position: 'fixed',\n      top: '50%',\n      left: '50%',\n      margin: '-37px 0 0 -100px'\n    };\n    confirmImgSm = {\n      width: '30px',\n      height: '40px',\n      margin: '0 2vw'\n    };\n  } // const errorDiv = document.getElementById('errorDiv');\n\n\n  const nameInput = document.getElementById('name');\n  const emailInput = document.getElementById('email'); // const subjectInput = document.getElementById('subject');\n\n  const messageInput = document.getElementById('message');\n\n  const onSubmit = data => {\n    console.log(data); // Heres the data that should be sent \n\n    document.getElementById(\"emailForm\").reset(); // Clear form fields\n    //Show confirmation modal for x seconds\n\n    document.getElementById('confirmation').style.display = 'flex';\n    setTimeout(() => {\n      document.getElementById('confirmation').style.display = 'none';\n    }, 2500);\n  };\n\n  const showError = (errorMessage, formInput) => {\n    formInput.style.background = 'rgba(255, 0, 0, .2)';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: errorSm || error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 16\n      }\n    }, errorMessage);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: emailFormCont,\n    className: \"emailFormCont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: headingSm || heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, props.heading), // Only display this JSX block if the errors object is holding errors to display\n  Object.keys(errors).length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    style: errorMsgBlockSm || errorMsgBlock,\n    id: \"errorDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, errors.name && showError(errors.name.message, nameInput), errors.email && showError(\"Invalid Email\", emailInput), errors.message && showError(errors.message.message, messageInput)), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    style: form,\n    id: \"emailForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    id: \"name\",\n    ref: register({\n      required: \"Name Required\"\n    }),\n    style: textInputSm || textInput,\n    onChange: e => {\n      if (error.name === undefined) {\n        e.target.style.background = '#eee';\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email\",\n    name: \"email\",\n    id: \"email\",\n    ref: register({\n      required: \"Email Required\",\n      pattern: /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/i\n    }),\n    style: textInputSm || textInput,\n    onChange: e => {\n      if (error.email === undefined) {\n        e.target.style.background = '#eee';\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Subject\",\n    name: \"subject\",\n    id: \"subject\",\n    ref: register,\n    style: textInputSm || textInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    placeholder: \"Message\",\n    name: \"message\",\n    id: \"message\",\n    rows: \"6\",\n    ref: register({\n      required: \"Message Required\"\n    }),\n    style: textareaSm || textarea,\n    onChange: e => {\n      if (error.message === undefined) {\n        e.target.style.background = '#eee';\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    name: \"submit\",\n    value: \"SEND\",\n    style: submitBtnSm || submitBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: confirmationMessageSm || confirmationMessage,\n    id: \"confirmation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, windowWidth <= 600 ? \"Sent!\" : \"Message Sent!\", /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/images/confirmImg.png\",\n    alt: \"\",\n    style: confirmImgSm || confirmImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 21\n    }\n  })));\n}\n\nexport default EmailForm;","map":{"version":3,"sources":["/Users/connor/Documents/cbsi-front-facing-website/src/components/EmailForm.js"],"names":["React","useState","useEffect","useForm","emailFormCont","errorMsgBlock","background","padding","borderRadius","margin","display","error","color","fontSize","fontWeight","heading","form","flexDirection","justifyContent","alignItems","textInput","width","height","border","textarea","resize","submitBtn","confirmationMessage","letterSpacing","position","top","left","confirmImg","EmailForm","props","register","handleSubmit","errors","windowWidth","setWindowWidth","window","innerWidth","addEventListener","headingSm","textInputSm","textareaSm","submitBtnSm","errorMsgBlockSm","errorSm","confirmationMessageSm","confirmImgSm","nameInput","document","getElementById","emailInput","messageInput","onSubmit","data","console","log","reset","style","setTimeout","showError","errorMessage","formInput","Object","keys","length","name","message","email","required","e","undefined","target","pattern"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,MAAMC,aAAa,GAAG,EAAtB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,UAAU,EAAE,sBADM;AAElBC,EAAAA,OAAO,EAAE,MAFS;AAGlBC,EAAAA,YAAY,EAAE,KAHI;AAIlBC,EAAAA,MAAM,EAAE,WAJU;AAKlBC,EAAAA,OAAO,EAAE;AALS,CAAtB;AAOA,MAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE,KADG;AAEVC,EAAAA,QAAQ,EAAE,KAFA;AAGVC,EAAAA,UAAU,EAAE,KAHF;AAIVL,EAAAA,MAAM,EAAE;AAJE,CAAd;AAOA,MAAMM,OAAO,GAAG;AACZF,EAAAA,QAAQ,EAAE,KADE;AAEZC,EAAAA,UAAU,EAAE,KAFA;AAGZL,EAAAA,MAAM,EAAE;AAHI,CAAhB;AAMA,MAAMO,IAAI,GAAG;AACTN,EAAAA,OAAO,EAAE,MADA;AAETO,EAAAA,aAAa,EAAE,QAFN;AAGTC,EAAAA,cAAc,EAAE,QAHP;AAITC,EAAAA,UAAU,EAAE;AAJH,CAAb;AAOA,MAAMC,SAAS,GAAG;AACdd,EAAAA,UAAU,EAAE,MADE;AAEdM,EAAAA,KAAK,EAAE,OAFO;AAGdS,EAAAA,KAAK,EAAE,MAHO;AAIdC,EAAAA,MAAM,EAAE,KAJM;AAKdb,EAAAA,MAAM,EAAE,WALM;AAMdI,EAAAA,QAAQ,EAAE,KANI;AAOdU,EAAAA,MAAM,EAAE,iBAPM;AAQdf,EAAAA,YAAY,EAAE,MARA;AASdD,EAAAA,OAAO,EAAE;AATK,CAAlB;AAWA,MAAMiB,QAAQ,GAAG;AACblB,EAAAA,UAAU,EAAE,MADC;AAEbM,EAAAA,KAAK,EAAE,OAFM;AAGba,EAAAA,MAAM,EAAE,MAHK;AAIbJ,EAAAA,KAAK,EAAE,MAJM;AAKbZ,EAAAA,MAAM,EAAE,SALK;AAMbI,EAAAA,QAAQ,EAAE,KANG;AAObU,EAAAA,MAAM,EAAE,iBAPK;AAQbf,EAAAA,YAAY,EAAE,MARD;AASbD,EAAAA,OAAO,EAAE;AATI,CAAjB;AAYA,MAAMmB,SAAS,GAAG;AACdpB,EAAAA,UAAU,EAAE,kBADE;AAEdM,EAAAA,KAAK,EAAE,OAFO;AAGdS,EAAAA,KAAK,EAAE,MAHO;AAIdC,EAAAA,MAAM,EAAE,KAJM;AAKdb,EAAAA,MAAM,EAAE,WALM;AAMdI,EAAAA,QAAQ,EAAE,KANI;AAOdU,EAAAA,MAAM,EAAE,iBAPM;AAQdf,EAAAA,YAAY,EAAE;AARA,CAAlB;AAWA,MAAMmB,mBAAmB,GAAG;AACxBrB,EAAAA,UAAU,EAAE,kBADY;AAExBM,EAAAA,KAAK,EAAE,OAFiB;AAGxBS,EAAAA,KAAK,EAAE,OAHiB;AAIxBC,EAAAA,MAAM,EAAE,MAJgB;AAKxBd,EAAAA,YAAY,EAAE,MALU;AAMxBK,EAAAA,QAAQ,EAAE,MANc;AAOxBC,EAAAA,UAAU,EAAE,KAPY;AAQxBc,EAAAA,aAAa,EAAE,KARS;AASxB;AACAV,EAAAA,cAAc,EAAE,QAVQ;AAWxBC,EAAAA,UAAU,EAAE,QAXY;AAYxBU,EAAAA,QAAQ,EAAE,OAZc;AAaxBC,EAAAA,GAAG,EAAE,KAbmB;AAcxBC,EAAAA,IAAI,EAAE,KAdkB;AAexBtB,EAAAA,MAAM,EAAE;AAfgB,CAA5B;AAkBA,MAAMuB,UAAU,GAAG;AACfX,EAAAA,KAAK,EAAE,MADQ;AAEfC,EAAAA,MAAM,EAAE,MAFO;AAGfb,EAAAA,MAAM,EAAE;AAHO,CAAnB;;AAMA,SAASwB,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,MAAmClC,OAAO,EAAhD;AACA,QAAM,CAACmC,WAAD,EAAcC,cAAd,IAAgCtC,QAAQ,CAACuC,MAAM,CAACC,UAAR,CAA9C;AAEAvC,EAAAA,SAAS,CAAC,MAAM;AACZsC,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkC,MAAMH,cAAc,CAAEC,MAAM,CAACC,UAAT,CAAtD;AACH,GAFQ,EAEN,EAFM,CAAT,CAJsB,CAQtB;;AACA,MAAIE,SAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,eAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,qBAAJ;AACA,MAAIC,YAAJ;;AACA,MAAGZ,WAAW,GAAG,GAAjB,EAAsB;AAElBK,IAAAA,SAAS,GAAG;AACR9B,MAAAA,QAAQ,EAAE,KADF;AAERC,MAAAA,UAAU,EAAE,KAFJ;AAGRL,MAAAA,MAAM,EAAE;AAHA,KAAZ;AAMAmC,IAAAA,WAAW,GAAG;AACVtC,MAAAA,UAAU,EAAE,MADF;AAEVM,MAAAA,KAAK,EAAE,OAFG;AAGVS,MAAAA,KAAK,EAAE,KAHG;AAIVC,MAAAA,MAAM,EAAE,KAJE;AAKVb,MAAAA,MAAM,EAAE,SALE;AAMVI,MAAAA,QAAQ,EAAE,KANA;AAOVU,MAAAA,MAAM,EAAE,iBAPE;AAQVf,MAAAA,YAAY,EAAE,MARJ;AASVD,MAAAA,OAAO,EAAE;AATC,KAAd;AAYAsC,IAAAA,UAAU,GAAG;AACTvC,MAAAA,UAAU,EAAE,MADH;AAETM,MAAAA,KAAK,EAAE,OAFE;AAGTa,MAAAA,MAAM,EAAE,MAHC;AAITJ,MAAAA,KAAK,EAAE,KAJE;AAKTZ,MAAAA,MAAM,EAAE,SALC;AAMTI,MAAAA,QAAQ,EAAE,KAND;AAOTU,MAAAA,MAAM,EAAE,iBAPC;AAQTf,MAAAA,YAAY,EAAE,MARL;AASTD,MAAAA,OAAO,EAAE;AATA,KAAb;AAYAuC,IAAAA,WAAW,GAAG;AACVxC,MAAAA,UAAU,EAAE,kBADF;AAEVM,MAAAA,KAAK,EAAE,OAFG;AAGVS,MAAAA,KAAK,EAAE,KAHG;AAIVC,MAAAA,MAAM,EAAE,KAJE;AAKVb,MAAAA,MAAM,EAAE,SALE;AAMVI,MAAAA,QAAQ,EAAE,KANA;AAOVU,MAAAA,MAAM,EAAE,iBAPE;AAQVf,MAAAA,YAAY,EAAE;AARJ,KAAd;AAWAuC,IAAAA,eAAe,GAAG;AACd1B,MAAAA,KAAK,EAAE,KADO;AAEdf,MAAAA,UAAU,EAAE,sBAFE;AAGdC,MAAAA,OAAO,EAAE,MAHK;AAIdC,MAAAA,YAAY,EAAE,KAJA;AAKdC,MAAAA,MAAM,EAAE,WALM;AAMdC,MAAAA,OAAO,EAAE;AANK,KAAlB;AASAsC,IAAAA,OAAO,GAAG;AACNpC,MAAAA,KAAK,EAAE,KADD;AAENC,MAAAA,QAAQ,EAAE,KAFJ;AAGNC,MAAAA,UAAU,EAAE,KAHN;AAINL,MAAAA,MAAM,EAAE;AAJF,KAAV;AAOAwC,IAAAA,qBAAqB,GAAG;AACpB3C,MAAAA,UAAU,EAAE,kBADQ;AAEpBM,MAAAA,KAAK,EAAE,OAFa;AAGpBS,MAAAA,KAAK,EAAE,OAHa;AAIpBC,MAAAA,MAAM,EAAE,MAJY;AAKpBd,MAAAA,YAAY,EAAE,MALM;AAMpBK,MAAAA,QAAQ,EAAE,MANU;AAOpBC,MAAAA,UAAU,EAAE,KAPQ;AAQpBc,MAAAA,aAAa,EAAE,KARK;AASpBlB,MAAAA,OAAO,EAAE,MATW;AAUpBQ,MAAAA,cAAc,EAAE,QAVI;AAWpBC,MAAAA,UAAU,EAAE,QAXQ;AAYpBU,MAAAA,QAAQ,EAAE,OAZU;AAapBC,MAAAA,GAAG,EAAE,KAbe;AAcpBC,MAAAA,IAAI,EAAE,KAdc;AAepBtB,MAAAA,MAAM,EAAE;AAfY,KAAxB;AAkBAyC,IAAAA,YAAY,GAAG;AACX7B,MAAAA,KAAK,EAAE,MADI;AAEXC,MAAAA,MAAM,EAAE,MAFG;AAGXb,MAAAA,MAAM,EAAE;AAHG,KAAf;AAKH,GAnGqB,CAqGtB;;;AACA,QAAM0C,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlB;AACA,QAAMC,UAAU,GAAGF,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAnB,CAvGsB,CAwGtB;;AACA,QAAME,YAAY,GAAGH,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAArB;;AAEA,QAAMG,QAAQ,GAAIC,IAAD,IAAU;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADuB,CACH;;AACpBL,IAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCO,KAArC,GAFuB,CAEwB;AAE/C;;AACAR,IAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCQ,KAAxC,CAA8CnD,OAA9C,GAAwD,MAAxD;AACAoD,IAAAA,UAAU,CAAC,MAAM;AACbV,MAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCQ,KAAxC,CAA8CnD,OAA9C,GAAwD,MAAxD;AACH,KAFS,EAEP,IAFO,CAAV;AAKH,GAXD;;AAaA,QAAMqD,SAAS,GAAG,CAACC,YAAD,EAAeC,SAAf,KAA6B;AAC3CA,IAAAA,SAAS,CAACJ,KAAV,CAAgBvD,UAAhB,GAA6B,qBAA7B;AACA,wBAAO;AAAK,MAAA,KAAK,EAAG0C,OAAO,IAAIrC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCqD,YAAjC,CAAP;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,KAAK,EAAG5D,aAAb;AAA6B,IAAA,SAAS,EAAC,eAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAGuC,SAAS,IAAI5B,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCmB,KAAK,CAACnB,OAA5C,CADJ,EAGQ;AACAmD,EAAAA,MAAM,CAACC,IAAP,CAAY9B,MAAZ,EAAoB+B,MAApB,GAA6B,CAA7B,iBACI;AAAK,IAAA,KAAK,EAAGrB,eAAe,IAAI1C,aAAhC;AAAgD,IAAA,EAAE,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKgC,MAAM,CAACgC,IAAP,IAAeN,SAAS,CAAC1B,MAAM,CAACgC,IAAP,CAAYC,OAAb,EAAsBnB,SAAtB,CAD7B,EAEKd,MAAM,CAACkC,KAAP,IAAgBR,SAAS,CAAC,eAAD,EAAkBT,UAAlB,CAF9B,EAGKjB,MAAM,CAACiC,OAAP,IAAkBP,SAAS,CAAC1B,MAAM,CAACiC,OAAP,CAAeA,OAAhB,EAAyBf,YAAzB,CAHhC,CALZ,eAWI;AAAM,IAAA,QAAQ,EAAEnB,YAAY,CAACoB,QAAD,CAA5B;AAAwC,IAAA,KAAK,EAAGxC,IAAhD;AAAuD,IAAA,EAAE,EAAC,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,MAFhB;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,EAAE,EAAC,MAJP;AAKI,IAAA,GAAG,EAAEmB,QAAQ,CAAC;AAACqC,MAAAA,QAAQ,EAAE;AAAX,KAAD,CALjB;AAMI,IAAA,KAAK,EAAG5B,WAAW,IAAIxB,SAN3B;AAOI,IAAA,QAAQ,EAAGqD,CAAC,IAAI;AACZ,UAAG9D,KAAK,CAAC0D,IAAN,KAAeK,SAAlB,EAA4B;AACxBD,QAAAA,CAAC,CAACE,MAAF,CAASd,KAAT,CAAevD,UAAf,GAA4B,MAA5B;AACH;AACJ,KAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAkBI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,OAFhB;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,EAAE,EAAC,OAJP;AAKI,IAAA,GAAG,EAAE6B,QAAQ,CAAC;AAAEqC,MAAAA,QAAQ,EAAE,gBAAZ;AAA8BI,MAAAA,OAAO,EAAE;AAAvC,KAAD,CALjB;AAMI,IAAA,KAAK,EAAGhC,WAAW,IAAIxB,SAN3B;AAOI,IAAA,QAAQ,EAAGqD,CAAC,IAAI;AACZ,UAAG9D,KAAK,CAAC4D,KAAN,KAAgBG,SAAnB,EAA6B;AACzBD,QAAAA,CAAC,CAACE,MAAF,CAASd,KAAT,CAAevD,UAAf,GAA4B,MAA5B;AACH;AACJ,KAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,eAiCI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,SAFhB;AAGI,IAAA,IAAI,EAAC,SAHT;AAII,IAAA,EAAE,EAAC,SAJP;AAKI,IAAA,GAAG,EAAE6B,QALT;AAMI,IAAA,KAAK,EAAGS,WAAW,IAAIxB,SAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCJ,eA2CI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,SAFhB;AAGI,IAAA,IAAI,EAAC,SAHT;AAII,IAAA,EAAE,EAAC,SAJP;AAKI,IAAA,IAAI,EAAC,GALT;AAMI,IAAA,GAAG,EAAEe,QAAQ,CAAC;AAACqC,MAAAA,QAAQ,EAAE;AAAX,KAAD,CANjB;AAOI,IAAA,KAAK,EAAG3B,UAAU,IAAIrB,QAP1B;AAQI,IAAA,QAAQ,EAAGiD,CAAC,IAAI;AACZ,UAAG9D,KAAK,CAAC2D,OAAN,KAAkBI,SAArB,EAA+B;AAC3BD,QAAAA,CAAC,CAACE,MAAF,CAASd,KAAT,CAAevD,UAAf,GAA4B,MAA5B;AACH;AACJ,KAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CJ,eA2DI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,QAA1B;AAAmC,IAAA,KAAK,EAAC,MAAzC;AAAgD,IAAA,KAAK,EAAGwC,WAAW,IAAIpB,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3DJ,CAXJ,eAyEI;AAAK,IAAA,KAAK,EAAGuB,qBAAqB,IAAItB,mBAAtC;AAA4D,IAAA,EAAE,EAAC,cAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEYW,WAAW,IAAI,GAAf,GAAqB,OAArB,GAA+B,eAF3C,eAIQ;AAAK,IAAA,GAAG,EAAC,wBAAT;AAAkC,IAAA,GAAG,EAAC,EAAtC;AAAyC,IAAA,KAAK,EAAGY,YAAY,IAAIlB,UAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CAzEJ,CADJ;AAkFH;;AAED,eAAeC,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useForm } from 'react-hook-form';\n\nconst emailFormCont = {}\n\nconst errorMsgBlock = {\n    background: 'rgba(255, 0, 0, .25)',\n    padding: '.5vw',\n    borderRadius: '5px',\n    margin: '0 0 2vw 0',\n    display: 'inline-block',\n}\nconst error = {\n    color: 'red',\n    fontSize: '2vw',\n    fontWeight: '400',\n    margin: '.5vw',\n}\n\nconst heading = {\n    fontSize: '3vw',\n    fontWeight: '400',\n    margin: '2vw 0',\n}\n\nconst form = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n}\n\nconst textInput = {\n    background: '#eee',\n    color: 'black',\n    width: '40vw',\n    height: '4vw',\n    margin: '1.7vw 5vw',\n    fontSize: '2vw',\n    border: '2px solid black',\n    borderRadius: '10px',\n    padding: '0 1vw 0 1vw',\n}\nconst textarea = {\n    background: '#eee',\n    color: 'black',\n    resize: 'none',\n    width: '40vw',\n    margin: '3vw 5vw',\n    fontSize: '2vw',\n    border: '2px solid black',\n    borderRadius: '10px',\n    padding: '1vw 1vw 1vw 1vw',\n}\n\nconst submitBtn = {\n    background: 'rgb(166, 25, 46)',\n    color: 'white',\n    width: '20vw',\n    height: '4vw',\n    margin: '0 0 3vw 0',\n    fontSize: '2vw',\n    border: '2px solid black',\n    borderRadius: '100px',\n}\n\nconst confirmationMessage = {\n    background: 'rgba(0,230,0,.4)',\n    color: 'white',\n    width: '200px',\n    height: '74px',\n    borderRadius: '20px',\n    fontSize: '30px',\n    fontWeight: '400',\n    letterSpacing: '3px',\n    // display: 'none',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    margin: '-37px 0 0 -100px',\n}\n\nconst confirmImg = {\n    width: '30px',\n    height: '40px',\n    margin: '0 2vw'\n}\n\nfunction EmailForm(props) {\n    const {register, handleSubmit, errors} = useForm();\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', () => setWindowWidth((window.innerWidth)));\n    }, [])\n\n    // Responsive Style changes \n    var headingSm;\n    var textInputSm;\n    var textareaSm;\n    var submitBtnSm;\n    var errorMsgBlockSm;\n    var errorSm;\n    var confirmationMessageSm;\n    var confirmImgSm;\n    if(windowWidth < 600) {\n\n        headingSm = {\n            fontSize: '5vw',\n            fontWeight: '400',\n            margin: '6vw 0 3vw 0',\n        }\n\n        textInputSm = {\n            background: '#eee',\n            color: 'black',\n            width: '80%',\n            height: '6vw',\n            margin: '3vw 5vw',\n            fontSize: '3vw',\n            border: '2px solid black',\n            borderRadius: '10px',\n            padding: '0 1vw 0 1vw',\n        }\n\n        textareaSm = {\n            background: '#eee',\n            color: 'black',\n            resize: 'none',\n            width: '80%',\n            margin: '3vw 5vw',\n            fontSize: '3vw',\n            border: '2px solid black',\n            borderRadius: '10px',\n            padding: '1vw 1vw 1vw 1vw',\n        }\n\n        submitBtnSm = {\n            background: 'rgb(166, 25, 46)',\n            color: 'white',\n            width: '50%',\n            height: '7vw',\n            margin: '3vw 5vw',\n            fontSize: '4vw',\n            border: '2px solid black',\n            borderRadius: '100px',\n        }\n\n        errorMsgBlockSm = {\n            width: '40%',\n            background: 'rgba(255, 0, 0, .25)',\n            padding: '.5vw',\n            borderRadius: '5px',\n            margin: '0 0 2vw 0',\n            display: 'inline-block',\n        }\n\n        errorSm = {\n            color: 'red',\n            fontSize: '3vw',\n            fontWeight: '400',\n            margin: '.7vw',\n        }\n\n        confirmationMessageSm = {\n            background: 'rgba(0,230,0,.4)',\n            color: 'white',\n            width: '200px',\n            height: '74px',\n            borderRadius: '20px',\n            fontSize: '30px',\n            fontWeight: '400',\n            letterSpacing: '3px',\n            display: 'none',\n            justifyContent: 'center',\n            alignItems: 'center',\n            position: 'fixed',\n            top: '50%',\n            left: '50%',\n            margin: '-37px 0 0 -100px',\n        }\n\n        confirmImgSm = {\n            width: '30px',\n            height: '40px',\n            margin: '0 2vw'\n        }\n    }\n\n    // const errorDiv = document.getElementById('errorDiv');\n    const nameInput = document.getElementById('name');\n    const emailInput = document.getElementById('email');\n    // const subjectInput = document.getElementById('subject');\n    const messageInput = document.getElementById('message');\n\n    const onSubmit = (data) => {\n        console.log(data);  // Heres the data that should be sent \n        document.getElementById(\"emailForm\").reset();  // Clear form fields\n\n        //Show confirmation modal for x seconds\n        document.getElementById('confirmation').style.display = 'flex';\n        setTimeout(() => {\n            document.getElementById('confirmation').style.display = 'none';\n        }, 2500);\n\n\n    }\n\n    const showError = (errorMessage, formInput) => {\n        formInput.style.background = 'rgba(255, 0, 0, .2)';\n        return <div style={ errorSm || error }>{errorMessage}</div>\n    }\n\n    return (\n        <div style={ emailFormCont } className=\"emailFormCont\">\n            <div style={ headingSm || heading }>{ props.heading }</div>\n            { \n                // Only display this JSX block if the errors object is holding errors to display\n                Object.keys(errors).length > 0 &&\n                    <div style={ errorMsgBlockSm || errorMsgBlock } id=\"errorDiv\">\n                        {errors.name && showError(errors.name.message, nameInput)}\n                        {errors.email && showError(\"Invalid Email\", emailInput)}\n                        {errors.message && showError(errors.message.message, messageInput)}\n                    </div> \n            }\n            <form onSubmit={handleSubmit(onSubmit)} style={ form } id=\"emailForm\">\n\n                {/* Name Input*/}\n                <input \n                    type=\"text\" \n                    placeholder=\"Name\" \n                    name=\"name\" \n                    id=\"name\"\n                    ref={register({required: \"Name Required\"})} \n                    style={ textInputSm || textInput }\n                    onChange={ e => {\n                        if(error.name === undefined){\n                            e.target.style.background = '#eee';\n                        }\n                    }}\n                />\n\n                {/* Email Input*/}\n                <input \n                    type=\"text\" \n                    placeholder=\"Email\" \n                    name=\"email\" \n                    id=\"email\"\n                    ref={register({ required: \"Email Required\", pattern: /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/i })} \n                    style={ textInputSm || textInput }\n                    onChange={ e => {\n                        if(error.email === undefined){\n                            e.target.style.background = '#eee';\n                        }\n                    }}\n                />\n\n                {/* Subject Input*/}\n                <input \n                    type=\"text\" \n                    placeholder=\"Subject\" \n                    name=\"subject\" \n                    id=\"subject\"\n                    ref={register} \n                    style={ textInputSm || textInput }\n                />\n\n                {/* Message Input*/}\n                <textarea  \n                    type=\"text\" \n                    placeholder=\"Message\" \n                    name=\"message\" \n                    id=\"message\"\n                    rows=\"6\"\n                    ref={register({required: \"Message Required\"})} \n                    style={ textareaSm || textarea }\n                    onChange={ e => {\n                        if(error.message === undefined){\n                            e.target.style.background = '#eee';\n                        }\n                    }}\n                />\n\n                {/* Submit Button */}\n                <input type=\"submit\" name=\"submit\" value=\"SEND\" style={ submitBtnSm || submitBtn }/>\n\n            </form>\n            <div style={ confirmationMessageSm || confirmationMessage } id='confirmation'>\n                    {\n                        windowWidth <= 600 ? \"Sent!\" : \"Message Sent!\"\n                    }\n                    <img src=\"/images/confirmImg.png\" alt=\"\" style={ confirmImgSm || confirmImg }/>\n            </div>\n        </div>\n    );\n}\n\nexport default EmailForm;"]},"metadata":{},"sourceType":"module"}