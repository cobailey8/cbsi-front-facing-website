{"ast":null,"code":"var _jsxFileName = \"/Users/connor/Documents/cbsi-front-facing-website/src/components/ImageInfoBlock.js\";\nimport React, { useState, useEffect } from 'react';\nvar imageInfoBlock = {\n  padding: '6vw 3vw 3vw 3vw',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n};\nvar imgCont = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n};\nvar img = {\n  height: '27vw',\n  width: '40vw',\n  borderRadius: '3px'\n};\nvar textBl = {\n  flex: 2,\n  display: 'flex',\n  flexDirection: 'column',\n  textAlign: 'left',\n  padding: '0 3vw 3vw 3vw 3vw'\n};\nvar headerContBlock = {\n  fontSize: '3vw',\n  fontWeight: '400',\n  margin: '0 0 2.5vw 0',\n  padding: '0 0 0 1.2vw'\n};\nvar textContBlock = {\n  width: '90%',\n  height: '85%',\n  fontSize: '1.8vw',\n  fontWeight: '300',\n  display: 'flex',\n  margin: '0 0 0 2.3vw'\n};\n\nfunction ImageInfoBlock(props) {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const handleResize = () => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n  }, []); // Dark theme or light theme based on props. default is light.\n\n  var color = props.isDark ? {\n    background: 'rgba(63, 73, 83, 1)',\n    color: 'white'\n  } : {\n    background: '',\n    color: 'rgba(44,42,41)'\n  };\n  imageInfoBlock = { ...imageInfoBlock,\n    ...color\n  };\n  var cont = {\n    display: 'flex',\n    flexDirection: props.flip ? 'row-reverse' : 'row',\n    justifyContent: 'center',\n    maxWidth: '1000px'\n  }; // Display right to left, or left to right based on the 'flip' prop. Also takes care of mobile styling\n\n  var imgSm;\n  var headerContBlockSm;\n  var textContBlockSm;\n\n  if (windowWidth <= 600) {\n    // 'flip' prop doesn't matter here becauuse flexDirection has to be set to 'column'\n    cont = {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      maxWidth: '1000px'\n    };\n    imgSm = {\n      width: '100%',\n      borderRadius: '7px'\n    };\n    headerContBlockSm = {\n      display: 'flex',\n      justifyContent: 'center',\n      fontSize: '4.5vw',\n      fontWeight: '400',\n      letterSpacing: '2px',\n      margin: '3vw 0 2vw 0'\n    };\n    textContBlockSm = {\n      fontSize: '2.8vw',\n      fontWeight: '400',\n      margin: '0 3vw',\n      letterSpacing: '.3vw'\n    };\n  } else if (windowWidth > 1280) {\n    cont = {\n      display: 'flex',\n      flexDirection: props.flip ? 'row-reverse' : 'row',\n      justifyContent: 'center',\n      width: '75%'\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: imageInfoBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: cont,\n    className: \"imageInfoBlock\",\n    id: \"find\" + props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: imgCont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.image || './images/placeholder.jpg',\n    alt: props.headding,\n    style: imgSm || img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 40\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: textBl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: headerContBlockSm || headerContBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, props.headerContent), /*#__PURE__*/React.createElement(\"div\", {\n    style: textContBlockSm || textContBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, props.textContent))));\n}\n\nexport default ImageInfoBlock;","map":{"version":3,"sources":["/Users/connor/Documents/cbsi-front-facing-website/src/components/ImageInfoBlock.js"],"names":["React","useState","useEffect","imageInfoBlock","padding","display","justifyContent","alignItems","imgCont","img","height","width","borderRadius","textBl","flex","flexDirection","textAlign","headerContBlock","fontSize","fontWeight","margin","textContBlock","ImageInfoBlock","props","windowWidth","setWindowWidth","window","innerWidth","handleResize","addEventListener","color","isDark","background","cont","flip","maxWidth","imgSm","headerContBlockSm","textContBlockSm","letterSpacing","id","image","headding","headerContent","textContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nvar imageInfoBlock = {\n    padding: '6vw 3vw 3vw 3vw',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n}\n\nvar imgCont = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n}\n\nvar img = {\n    height: '27vw',\n    width: '40vw',\n    borderRadius: '3px',\n}\n\nvar textBl = {\n    flex: 2,\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'left',\n    padding: '0 3vw 3vw 3vw 3vw',\n}\n\nvar headerContBlock = {\n    fontSize: '3vw',\n    fontWeight: '400',\n    margin: '0 0 2.5vw 0',\n    padding: '0 0 0 1.2vw',\n\n}\n\nvar textContBlock = {\n    width: '90%',\n    height: '85%',\n    fontSize: '1.8vw',\n    fontWeight: '300',\n    display: 'flex',\n    margin: '0 0 0 2.3vw',\n}\n\nfunction ImageInfoBlock(props) {\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n    const handleResize = () => {\n        setWindowWidth(window.innerWidth);\n    }\n\n    useEffect(() => {\n        window.addEventListener('resize', handleResize);\n    }, [])\n\n    // Dark theme or light theme based on props. default is light.\n    var color = props.isDark \n        ? { background: 'rgba(63, 73, 83, 1)', color: 'white' } \n        : { background: '', color: 'rgba(44,42,41)' };\n    \n    imageInfoBlock = {\n        ...imageInfoBlock,\n        ...color\n    }\n\n    var cont = {\n        display: 'flex',\n        flexDirection: props.flip ? 'row-reverse' : 'row',\n        justifyContent: 'center',\n        maxWidth: '1000px'\n    }\n\n\n    // Display right to left, or left to right based on the 'flip' prop. Also takes care of mobile styling\n    var imgSm;\n    var headerContBlockSm;\n    var textContBlockSm;\n    if(windowWidth <= 600){  // 'flip' prop doesn't matter here becauuse flexDirection has to be set to 'column'\n\n        cont = { \n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            maxWidth: '1000px'\n        };\n\n        imgSm = {\n            width: '100%',\n            borderRadius: '7px',\n        }\n\n        headerContBlockSm = {\n            display: 'flex',\n            justifyContent: 'center',\n            fontSize: '4.5vw',\n            fontWeight: '400',\n            letterSpacing: '2px',\n            margin: '3vw 0 2vw 0',\n        \n        }\n\n        textContBlockSm = {\n            fontSize: '2.8vw',\n            fontWeight: '400',\n            margin: '0 3vw',\n            letterSpacing: '.3vw',\n        }\n\n    } else if(windowWidth > 1280){\n        cont = {\n            display: 'flex',\n            flexDirection: props.flip ? 'row-reverse' : 'row',\n            justifyContent: 'center',\n            width: '75%'\n        }\n    }\n\n    return (\n        <div style={ imageInfoBlock }>\n            <div style={ cont } className=\"imageInfoBlock\" id={\"find\"+props.id}>\n                <div style={ imgCont }><img src={ props.image || './images/placeholder.jpg' } alt={props.headding} style={ imgSm || img } /></div>\n                <div style={ textBl }>\n                    <div style={headerContBlockSm || headerContBlock}>\n                        {props.headerContent}\n                    </div>\n                    <div style={textContBlockSm || textContBlock}>\n                        {props.textContent}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ImageInfoBlock;\n"]},"metadata":{},"sourceType":"module"}