{"ast":null,"code":"var _jsxFileName = \"/Users/connor/Documents/React Projects/cbsi/src/components/DataListBlock.js\";\nimport React from 'react';\nimport ImageInfoBlock from './ImageInfoBlock';\nconst dataListBlock = {};\n\nfunction DataListBlock(props) {\n  var dataArr = []; //  Grabs data from the props.jsonData file and pushes each modal object into the dataArr array.\n\n  /*  \n      I feel like this needs an explanation:\n          This was done so that later on, I can set up a CMS for CBSI to update their site more easily. Eventually, Ill populate\n          that props.jsonData file using CMS options for any user grated such privelages. For now, it doesnt cause  any\n          performance issues, and will stay this way until the CMS portion is completed.\n           The modals are currently entirely created and populated using data from the props.jsonData file. \n  */\n\n  Object.keys(props.jsonData).forEach(key => dataArr.push(props.jsonData[key]));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: dataListBlock,\n    className: \"dataListBlock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"MORE INFO\"), //Output a Modal component for each object in dataArr\n  dataArr.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    style: gridItem,\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ImageInfoBlock, {\n    isDark: false,\n    flip: true,\n    image: item.image,\n    headerContent: \"OUR MISSION\",\n    textContent: \" Our safety-oriented focus on customer service and quality craftsmanship has been  valued by our customers. We\\u2019ve had the unique privilege of working on some of the  most prestigious commercial, multi-family and historic government properties in the  Washington, D.C. metropolitan area.  Click on the \\u201CView Projects\\u201D button below to see  a comprehensive list of our projects. \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }))));\n}\n\nexport default DataListBlock;","map":{"version":3,"sources":["/Users/connor/Documents/React Projects/cbsi/src/components/DataListBlock.js"],"names":["React","ImageInfoBlock","dataListBlock","DataListBlock","props","dataArr","Object","keys","jsonData","forEach","key","push","map","item","gridItem","id","image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,aAAa,GAAG,EAAtB;;AAIA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAE1B,MAAIC,OAAO,GAAG,EAAd,CAF0B,CAI1B;;AACA;;;;;;;;AAQAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,QAAlB,EAA4BC,OAA5B,CAAoCC,GAAG,IAAIL,OAAO,CAACM,IAAR,CAAaP,KAAK,CAACI,QAAN,CAAeE,GAAf,CAAb,CAA3C;AAGA,sBACI;AAAK,IAAA,KAAK,EAAGR,aAAb;AAA6B,IAAA,SAAS,EAAC,eAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAIQ;AACAG,EAAAA,OAAO,CAACO,GAAR,CAAYC,IAAI,iBACZ;AAAK,IAAA,KAAK,EAAGC,QAAb;AAAwB,IAAA,GAAG,EAAGD,IAAI,CAACE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AACI,IAAA,MAAM,EAAG,KADb;AAEI,IAAA,IAAI,EAAG,IAFX;AAGI,IAAA,KAAK,EAAEF,IAAI,CAACG,KAHhB;AAII,IAAA,aAAa,EAAC,aAJlB;AAKI,IAAA,WAAW,EAAC,yYALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CALR,CADJ;AA0BH;;AAED,eAAeb,aAAf","sourcesContent":["import React from 'react';\nimport ImageInfoBlock from './ImageInfoBlock';\n\nconst dataListBlock = {\n\n}\n\nfunction DataListBlock(props) {\n\n    var dataArr = [];\n\n    //  Grabs data from the props.jsonData file and pushes each modal object into the dataArr array.\n    /*  \n        I feel like this needs an explanation:\n            This was done so that later on, I can set up a CMS for CBSI to update their site more easily. Eventually, Ill populate\n            that props.jsonData file using CMS options for any user grated such privelages. For now, it doesnt cause  any\n            performance issues, and will stay this way until the CMS portion is completed.\n\n            The modals are currently entirely created and populated using data from the props.jsonData file. \n    */\n    Object.keys(props.jsonData).forEach(key => dataArr.push(props.jsonData[key]));\n\n\n    return (\n        <div style={ dataListBlock } className=\"dataListBlock\">\n            <h1>MORE INFO</h1>\n\n            {\n                //Output a Modal component for each object in dataArr\n                dataArr.map(item => \n                    <div style={ gridItem } key={ item.id }>\n                        <ImageInfoBlock \n                            isDark={ false } \n                            flip={ true }\n                            image={item.image} \n                            headerContent=\"OUR MISSION\" \n                            textContent=\"\n                                Our safety-oriented focus on customer service and quality craftsmanship has been \n                                valued by our customers. We’ve had the unique privilege of working on some of the \n                                most prestigious commercial, multi-family and historic government properties in the \n                                Washington, D.C. metropolitan area.  Click on the “View Projects” button below to see \n                                a comprehensive list of our projects.\n                            \" \n                        />\n                    </div>\n                )\n            }\n        </div>\n    );\n}\n\nexport default DataListBlock;\n"]},"metadata":{},"sourceType":"module"}