{"ast":null,"code":"var _jsxFileName = \"/Users/connor/Documents/cbsi-front-facing-website/src/components/ImageInfoBlock.js\";\nimport React, { useState, useEffect } from 'react';\nvar imageInfoBlock = {\n  background: 'red',\n  padding: '2vw',\n  display: 'flex',\n  justifyContent: 'center'\n};\nvar cont = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  maxWidth: '1000px',\n  width: '100%'\n};\nvar imgCont = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n};\nvar img = {\n  height: '27vw',\n  maxHeight: '350px',\n  width: '40vw',\n  maxWidth: '400px',\n  borderRadius: '3px'\n};\nvar textBl = {\n  flex: 2,\n  display: 'flex',\n  flexDirection: 'column',\n  maxWidth: '700px',\n  textAlign: 'left',\n  padding: '0 3vw 3vw 3vw 3vw'\n};\nvar headerContBlock = {\n  fontSize: '24px',\n  fontWeight: '400',\n  minWidth: '300px',\n  width: '95%',\n  margin: '0 0 1vw 0',\n  padding: '0 0 0 2vw'\n};\nvar textContBlock = {\n  width: '95%',\n  height: '85%',\n  fontSize: '17px',\n  fontWeight: '300',\n  display: 'flex',\n  margin: '0 0 0 2vw'\n};\n\nfunction ImageInfoBlock(props) {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    function handleResize() {\n      setWindowWidth(window.innerWidth);\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []); // Dark theme or light theme based on props. default is light.\n\n  var color = props.isDark ? {\n    background: 'rgba(63, 73, 83, 1)',\n    color: 'white'\n  } : {\n    background: '',\n    color: 'rgba(44,42,41)'\n  };\n  imageInfoBlock = { ...imageInfoBlock,\n    ...color\n  }; // Display right to left, or left to right based on the 'flip' prop. Also takes care of mobile styling\n\n  var imageInfoBlockR;\n  var imgR;\n  var headerContBlockR;\n  var textContBlockR;\n\n  if (windowWidth < 600) {\n    // 'flip' prop doesn't matter here becauuse flexDirection has to be set to 'column'\n    imageInfoBlockR = {\n      padding: '2vw 2vw 8vw 2vw',\n      display: 'flex',\n      justifyContent: 'center'\n    };\n    cont = { ...cont,\n      flexDirection: 'column'\n    };\n    imgR = {\n      width: '100%',\n      borderRadius: '7px'\n    };\n    headerContBlockR = {\n      display: 'flex',\n      justifyContent: 'center',\n      fontSize: '4.5vw',\n      fontWeight: '400',\n      letterSpacing: '2px',\n      margin: '3vw 0 2vw 0'\n    };\n    textContBlockR = {\n      fontSize: '2.8vw',\n      fontWeight: '400',\n      margin: '0 3vw',\n      letterSpacing: '.3vw'\n    };\n  } else if (props.flip) {\n    // 'flip' prop is true, and the row should be viewed in reverse.\n    cont = { ...cont,\n      flexDirection: 'row-reverse'\n    };\n  } else {\n    // 'flip' prop is false, and the row should be viewed as is written naturally in JSX below\n    cont = { ...cont,\n      flexDirection: 'row'\n    };\n  }\n\n  if (windowWidth >= 1280) {\n    headerContBlockR = {\n      width: '90%',\n      minWidth: '600px',\n      fontSize: '30px',\n      fontWeight: '400',\n      margin: '0 0 1vw 0',\n      padding: '0 0 0 10px'\n    };\n    textContBlockR = {\n      width: '95%',\n      height: '85%',\n      fontSize: '20px',\n      fontWeight: '300',\n      display: 'flex',\n      margin: '0 0 0 1vw'\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: imageInfoBlockR || imageInfoBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: cont,\n    className: \"imageInfoBlock\",\n    id: \"find\" + props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: imgCont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.image || './images/placeholder.jpg',\n    alt: props.headding,\n    style: imgR || img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 40\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: textBl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: headerContBlockR || headerContBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, props.headerContent), /*#__PURE__*/React.createElement(\"div\", {\n    style: textContBlockR || textContBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, props.textContent))));\n}\n\nexport default ImageInfoBlock;","map":{"version":3,"sources":["/Users/connor/Documents/cbsi-front-facing-website/src/components/ImageInfoBlock.js"],"names":["React","useState","useEffect","imageInfoBlock","background","padding","display","justifyContent","cont","flexDirection","maxWidth","width","imgCont","alignItems","img","height","maxHeight","borderRadius","textBl","flex","textAlign","headerContBlock","fontSize","fontWeight","minWidth","margin","textContBlock","ImageInfoBlock","props","windowWidth","setWindowWidth","window","innerWidth","handleResize","addEventListener","removeEventListener","color","isDark","imageInfoBlockR","imgR","headerContBlockR","textContBlockR","letterSpacing","flip","id","image","headding","headerContent","textContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nvar imageInfoBlock = {\n    background: 'red',\n    padding: '2vw',\n    display: 'flex',\n    justifyContent: 'center',\n}\n\nvar cont = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    maxWidth: '1000px',\n    width: '100%',\n}\n\nvar imgCont = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n}\n\nvar img = {\n    height: '27vw',\n    maxHeight: '350px',\n    width: '40vw',\n    maxWidth: '400px',\n    borderRadius: '3px',\n}\n\nvar textBl = {\n    flex: 2,\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: '700px',\n    textAlign: 'left',\n    padding: '0 3vw 3vw 3vw 3vw',\n}\n\nvar headerContBlock = {\n    fontSize: '24px',\n    fontWeight: '400',\n    minWidth: '300px',\n    width: '95%',\n    margin: '0 0 1vw 0',\n    padding: '0 0 0 2vw',\n}\n\nvar textContBlock = {\n    width: '95%',\n    height: '85%',\n    fontSize: '17px',\n    fontWeight: '300',\n    display: 'flex',\n    margin: '0 0 0 2vw',\n}\n\nfunction ImageInfoBlock(props) {\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n    useEffect(() => {\n\n        function handleResize() {\n            setWindowWidth(window.innerWidth);\n        }\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        }\n\n    }, []);\n\n    // Dark theme or light theme based on props. default is light.\n    var color = props.isDark \n        ? { background: 'rgba(63, 73, 83, 1)', color: 'white' } \n        : { background: '', color: 'rgba(44,42,41)' };\n    \n    imageInfoBlock = {\n        ...imageInfoBlock,\n        ...color\n    }\n\n\n    // Display right to left, or left to right based on the 'flip' prop. Also takes care of mobile styling\n    var imageInfoBlockR;\n    var imgR;\n    var headerContBlockR;\n    var textContBlockR;\n    if(windowWidth < 600){  // 'flip' prop doesn't matter here becauuse flexDirection has to be set to 'column'\n\n        imageInfoBlockR = {\n            padding: '2vw 2vw 8vw 2vw',\n            display: 'flex',\n            justifyContent: 'center',\n        }\n\n        cont = { ...cont, flexDirection: 'column' };\n\n        imgR = {\n            width: '100%',\n            borderRadius: '7px',\n        }\n\n        headerContBlockR = {\n            display: 'flex',\n            justifyContent: 'center',\n            fontSize: '4.5vw',\n            fontWeight: '400',\n            letterSpacing: '2px',\n            margin: '3vw 0 2vw 0',\n        \n        }\n\n        textContBlockR = {\n            fontSize: '2.8vw',\n            fontWeight: '400',\n            margin: '0 3vw',\n            letterSpacing: '.3vw',\n        }\n\n    } else if(props.flip){  // 'flip' prop is true, and the row should be viewed in reverse.\n        cont = { ...cont, flexDirection: 'row-reverse' };\n    } else {    // 'flip' prop is false, and the row should be viewed as is written naturally in JSX below\n        cont = { ...cont, flexDirection: 'row' };\n    }\n\n    if(windowWidth >= 1280) {\n        headerContBlockR = {\n            width: '90%',\n            minWidth: '600px',\n            fontSize: '30px',\n            fontWeight: '400',\n            margin: '0 0 1vw 0',\n            padding: '0 0 0 10px',\n        \n        }\n\n        textContBlockR = {\n            width: '95%',\n            height: '85%',\n            fontSize: '20px',\n            fontWeight: '300',\n            display: 'flex',\n            margin: '0 0 0 1vw',\n        }\n    }\n\n    return (\n        <div style={ imageInfoBlockR || imageInfoBlock }>\n            <div style={ cont } className=\"imageInfoBlock\" id={\"find\"+props.id}>\n                <div style={ imgCont }><img src={ props.image || './images/placeholder.jpg' } alt={props.headding} style={ imgR || img } /></div>\n                <div style={ textBl }>\n                    <div style={headerContBlockR || headerContBlock}>\n                        {props.headerContent}\n                    </div>\n                    <div style={textContBlockR || textContBlock}>\n                        {props.textContent}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ImageInfoBlock;\n"]},"metadata":{},"sourceType":"module"}