{"ast":null,"code":"var _jsxFileName = \"/Users/connor/Documents/React Projects/cbsi/src/components/EmailForm.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nconst emailFormCont = {// background: 'red',\n};\nconst errorMsgBlock = {\n  background: 'rgba(255, 0, 0, .25)',\n  margin: '1vw',\n  padding: '.5vw',\n  borderRadius: '5px',\n  margin: '0 0 2vw 0',\n  display: 'none'\n};\nconst error = {\n  color: 'red',\n  fontSize: '2vw',\n  fontWeight: '400',\n  margin: '.5vw'\n};\nconst heading = {\n  fontSize: '3vw',\n  fontWeight: '400',\n  margin: '2vw 0'\n};\nconst form = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center'\n};\nconst textInput = {\n  background: '#eee',\n  color: 'black',\n  width: '40vw',\n  height: '4vw',\n  margin: '0 0 3vw 0',\n  fontSize: '2vw',\n  border: '2px solid black',\n  borderRadius: '10px',\n  padding: '0 1vw 0 1vw'\n};\nconst textarea = {\n  background: '#eee',\n  color: 'black',\n  resize: 'none',\n  width: '38vw',\n  margin: '0 0 3vw 0',\n  fontSize: '2vw',\n  border: '2px solid black',\n  borderRadius: '10px',\n  padding: '1vw 1vw 1vw 1vw'\n};\nconst submitBtn = {\n  background: 'rgb(166, 25, 46)',\n  color: 'white',\n  width: '15vw',\n  margin: '0 0 3vw 0',\n  fontSize: '2vw',\n  border: '2px solid black',\n  borderRadius: '10px'\n};\n\nfunction EmailForm(props) {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const errorDiv = document.getElementById('errorBlock');\n  const nameInput = document.getElementById('name');\n  const emailInput = document.getElementById('email');\n  const subjectInput = document.getElementById('subject');\n  const messageInput = document.getElementById('message');\n\n  const onSubmit = data => {\n    console.log(data);\n    document.getElementById(\"emailForm\").reset(); // Clear form fields\n  };\n\n  const showError = errorMessage => {\n    errorDiv.style.display = 'inline-block';\n    console.log(errors);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 16\n      }\n    }, errorMessage);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: emailFormCont,\n    className: \"emailFormCont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, props.heading), /*#__PURE__*/React.createElement(\"div\", {\n    style: errorMsgBlock,\n    id: \"errorBlock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, errors.name && showError(errors.name.message), errors.email && showError(\"Invalid Email\"), errors.message && showError(errors.message.message)), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    style: form,\n    id: \"emailForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    id: \"name\",\n    ref: register({\n      required: \"Name Required\"\n    }),\n    style: textInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email\",\n    name: \"email\",\n    id: \"email\",\n    ref: register({\n      required: \"Email Required\",\n      pattern: /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/i\n    }),\n    style: textInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Subject\",\n    name: \"subject\",\n    id: \"subject\",\n    ref: register,\n    style: textInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    placeholder: \"Message\",\n    name: \"message\",\n    id: \"message\",\n    rows: \"4\",\n    ref: register({\n      required: \"Message Required\"\n    }),\n    style: textarea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    name: \"submit\",\n    value: \"SEND\",\n    style: submitBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default EmailForm;","map":{"version":3,"sources":["/Users/connor/Documents/React Projects/cbsi/src/components/EmailForm.js"],"names":["React","useForm","emailFormCont","errorMsgBlock","background","margin","padding","borderRadius","display","error","color","fontSize","fontWeight","heading","form","flexDirection","justifyContent","alignItems","textInput","width","height","border","textarea","resize","submitBtn","EmailForm","props","register","handleSubmit","errors","errorDiv","document","getElementById","nameInput","emailInput","subjectInput","messageInput","onSubmit","data","console","log","reset","showError","errorMessage","style","name","message","email","required","pattern"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\n\nconst emailFormCont = {\n    // background: 'red',\n}\n\nconst errorMsgBlock = {\n    background: 'rgba(255, 0, 0, .25)',\n    margin: '1vw',\n    padding: '.5vw',\n    borderRadius: '5px',\n    margin: '0 0 2vw 0',\n    display: 'none',\n}\nconst error = {\n    color: 'red',\n    fontSize: '2vw',\n    fontWeight: '400',\n    margin: '.5vw',\n}\n\nconst heading = {\n    fontSize: '3vw',\n    fontWeight: '400',\n    margin: '2vw 0',\n}\n\nconst form = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n}\n\nconst textInput = {\n    background: '#eee',\n    color: 'black',\n    width: '40vw',\n    height: '4vw',\n    margin: '0 0 3vw 0',\n    fontSize: '2vw',\n    border: '2px solid black',\n    borderRadius: '10px',\n    padding: '0 1vw 0 1vw',\n}\nconst textarea = {\n    background: '#eee',\n    color: 'black',\n    resize: 'none',\n    width: '38vw',\n    margin: '0 0 3vw 0',\n    fontSize: '2vw',\n    border: '2px solid black',\n    borderRadius: '10px',\n    padding: '1vw 1vw 1vw 1vw',\n}\n\nconst submitBtn = {\n    background: 'rgb(166, 25, 46)',\n    color: 'white',\n    width: '15vw',\n    margin: '0 0 3vw 0',\n    fontSize: '2vw',\n    border: '2px solid black',\n    borderRadius: '10px',\n}\n\nfunction EmailForm(props) {\n    const {register, handleSubmit, errors} = useForm();\n\n    const errorDiv = document.getElementById('errorBlock');\n    const nameInput = document.getElementById('name');\n    const emailInput = document.getElementById('email');\n    const subjectInput = document.getElementById('subject');\n    const messageInput = document.getElementById('message');\n\n    const onSubmit = (data) => {\n        console.log(data);\n        document.getElementById(\"emailForm\").reset();  // Clear form fields\n    }\n\n\n\n    const showError = (errorMessage) => {\n        errorDiv.style.display = 'inline-block';\n        console.log(errors);\n        return <div style={ error }>{errorMessage}</div>\n    }\n\n    return (\n        <div style={ emailFormCont } className=\"emailFormCont\">\n            <div style={ heading }>{ props.heading }</div>\n            <div style={ errorMsgBlock } id=\"errorBlock\">\n                {errors.name && showError(errors.name.message, )}\n                {errors.email && showError(\"Invalid Email\")}\n                {errors.message && showError(errors.message.message)}\n            </div>\n\n            <form onSubmit={handleSubmit(onSubmit)} style={ form } id=\"emailForm\">\n\n                {/* Name Input*/}\n                <input \n                    type=\"text\" \n                    placeholder=\"Name\" \n                    name=\"name\" \n                    id=\"name\"\n                    ref={register({required: \"Name Required\"})} \n                    style={ textInput }\n                />\n\n                {/* Email Input*/}\n                <input \n                    type=\"text\" \n                    placeholder=\"Email\" \n                    name=\"email\" \n                    id=\"email\"\n                    ref={register({ required: \"Email Required\", pattern: /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/i })} \n                    style={ textInput }\n                />\n\n                {/* Subject Input*/}\n                <input \n                    type=\"text\" \n                    placeholder=\"Subject\" \n                    name=\"subject\" \n                    id=\"subject\"\n                    ref={register} \n                    style={ textInput }\n                />\n\n                {/* Message Input*/}\n                <textarea  \n                    type=\"text\" \n                    placeholder=\"Message\" \n                    name=\"message\" \n                    id=\"message\"\n                    rows=\"4\"\n                    ref={register({required: \"Message Required\"})} \n                    style={ textarea }\n                />\n\n                {/* Submit Button */}\n                <input type=\"submit\" name=\"submit\" value=\"SEND\" style={ submitBtn }/>\n\n            </form>\n        </div>\n    );\n}\n\nexport default EmailForm;"]},"metadata":{},"sourceType":"module"}