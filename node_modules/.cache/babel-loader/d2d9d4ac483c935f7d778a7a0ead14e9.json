{"ast":null,"code":"var _jsxFileName = \"/Users/connor/Documents/cbsi-front-facing-website/src/components/ProjectSpotlight.js\";\nimport React, { useState, useEffect } from 'react';\nimport LinkingInfoCard from './LinkingInfoCard';\nimport ImageCard from './ImageCard'; // Styles\n\nconst scrollableArea = {\n  background: 'rgba(63, 73, 83, 1)'\n};\nconst scrollableAreaCont = {\n  display: 'block',\n  overflowX: 'scroll',\n  overflowY: 'none',\n  minHeight: '280px',\n  overflow: 'auto',\n  // margin: '5px 3vw 40px 3vw',\n  borderRadius: '50px',\n  borderRight: '2px solid lightgray',\n  borderLeft: '2px solid lightgray'\n};\nconst scrollableAreaContFlex = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  height: '100%',\n  minHeight: 'inherit'\n}; // End Styles\n\nfunction ScrollableArea(props) {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    var handleResize = () => setWindowWidth(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Grab data from json file and convert it to an array\n\n  var dataArr = [];\n  Object.keys(props.jsonData).forEach(key => dataArr.push(props.jsonData[key]));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: scrollableArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"spotlightHeading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, props.heading), /*#__PURE__*/React.createElement(\"div\", {\n    style: scrollableAreaCont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: scrollableAreaContFlex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, //Output a Modal component for each object in dataArr\n  dataArr.map(item => {\n    // Will only create and display a card if the data item.spotlight = true\n    return item.spotlight ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '1vw'\n      },\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ImageCard, {\n      keyx: item.id,\n      image: item.image,\n      heading: item.heading,\n      text: item.text,\n      buttonTxt: item.buttonTxt,\n      link: item.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    })) : null;\n  })))));\n}\n\nexport default ScrollableArea;","map":{"version":3,"sources":["/Users/connor/Documents/cbsi-front-facing-website/src/components/ProjectSpotlight.js"],"names":["React","useState","useEffect","LinkingInfoCard","ImageCard","scrollableArea","background","scrollableAreaCont","display","overflowX","overflowY","minHeight","overflow","borderRadius","borderRight","borderLeft","scrollableAreaContFlex","justifyContent","alignItems","height","ScrollableArea","props","windowWidth","setWindowWidth","window","innerWidth","handleResize","addEventListener","removeEventListener","dataArr","Object","keys","jsonData","forEach","key","push","heading","map","item","spotlight","margin","id","image","text","buttonTxt","link"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,UAAU,EAAE;AADO,CAAvB;AAIA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,OAAO,EAAE,OADc;AAEvBC,EAAAA,SAAS,EAAE,QAFY;AAGvBC,EAAAA,SAAS,EAAE,MAHY;AAIvBC,EAAAA,SAAS,EAAE,OAJY;AAKvBC,EAAAA,QAAQ,EAAE,MALa;AAMvB;AACAC,EAAAA,YAAY,EAAE,MAPS;AAQvBC,EAAAA,WAAW,EAAE,qBARU;AASvBC,EAAAA,UAAU,EAAE;AATW,CAA3B;AAYA,MAAMC,sBAAsB,GAAG;AAC3BR,EAAAA,OAAO,EAAE,MADkB;AAE3BS,EAAAA,cAAc,EAAE,eAFW;AAG3BC,EAAAA,UAAU,EAAE,QAHe;AAI3BC,EAAAA,MAAM,EAAE,MAJmB;AAK3BR,EAAAA,SAAS,EAAE;AALgB,CAA/B,C,CAOA;;AAEA,SAASS,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAACuB,MAAM,CAACC,UAAR,CAA9C;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIwB,YAAY,GAAG,MAAMH,cAAc,CAACC,MAAM,CAACC,UAAR,CAAvC;;AACAD,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMF,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACH,GAJQ,EAIN,EAJM,CAAT,CAH2B,CAS3B;;AACA,MAAIG,OAAO,GAAG,EAAd;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYV,KAAK,CAACW,QAAlB,EAA4BC,OAA5B,CAAoCC,GAAG,IAAIL,OAAO,CAACM,IAAR,CAAad,KAAK,CAACW,QAAN,CAAeE,GAAf,CAAb,CAA3C;AAEA,sBACI,uDACA;AAAK,IAAA,KAAK,EAAG7B,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCgB,KAAK,CAACe,OAAxC,CADJ,eAEI;AAAK,IAAA,KAAK,EAAG7B,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAGS,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ;AACAa,EAAAA,OAAO,CAACQ,GAAR,CAAYC,IAAI,IAAI;AAEhB;AACA,WAAOA,IAAI,CAACC,SAAL,gBACH;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAZ;AAA6B,MAAA,GAAG,EAAGF,IAAI,CAACG,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAGH,IAAI,CAACG,EADhB;AAEI,MAAA,KAAK,EAAGH,IAAI,CAACI,KAFjB;AAGI,MAAA,OAAO,EAAGJ,IAAI,CAACF,OAHnB;AAII,MAAA,IAAI,EAAGE,IAAI,CAACK,IAJhB;AAKI,MAAA,SAAS,EAAGL,IAAI,CAACM,SALrB;AAMI,MAAA,IAAI,EAAGN,IAAI,CAACO,IANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADG,GAYM,IAZb;AAaH,GAhBD,CAHR,CADJ,CAFJ,CADA,CADJ;AA+BH;;AAED,eAAezB,cAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport LinkingInfoCard from './LinkingInfoCard';\nimport ImageCard from './ImageCard';\n\n// Styles\nconst scrollableArea = {\n    background: 'rgba(63, 73, 83, 1)',\n}\n\nconst scrollableAreaCont = {\n    display: 'block',\n    overflowX: 'scroll',\n    overflowY: 'none',\n    minHeight: '280px',\n    overflow: 'auto',\n    // margin: '5px 3vw 40px 3vw',\n    borderRadius: '50px',\n    borderRight: '2px solid lightgray',\n    borderLeft: '2px solid lightgray',\n}\n\nconst scrollableAreaContFlex = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: '100%',\n    minHeight: 'inherit',\n}\n// End Styles\n\nfunction ScrollableArea(props) {\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n    \n    useEffect(() => {\n        var handleResize = () => setWindowWidth(window.innerWidth);\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n        \n    // Grab data from json file and convert it to an array\n    var dataArr = [];\n    Object.keys(props.jsonData).forEach(key => dataArr.push(props.jsonData[key]));\n\n    return (\n        <>\n        <div style={ scrollableArea }>\n            <h1 className=\"spotlightHeading\">{props.heading}</h1>\n            <div style={ scrollableAreaCont }>\n                <div style={ scrollableAreaContFlex }>\n                    {\n                        //Output a Modal component for each object in dataArr\n                        dataArr.map(item => {\n                            \n                            // Will only create and display a card if the data item.spotlight = true\n                            return item.spotlight ? \n                                <div style={{margin: '1vw'}} key={ item.id }>\n\n                                    <ImageCard \n                                        keyx={ item.id }\n                                        image={ item.image } \n                                        heading={ item.heading } \n                                        text={ item.text } \n                                        buttonTxt={ item.buttonTxt } \n                                        link={ item.link }\n                                    />\n\n                                </div> : null;\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default ScrollableArea;\n"]},"metadata":{},"sourceType":"module"}