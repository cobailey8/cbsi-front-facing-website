{"ast":null,"code":"var _jsxFileName = \"/Users/connor/Documents/cbsi-front-facing-website/src/components/ImageInfoBlock.js\";\nimport React, { useState, useEffect } from 'react';\nvar imageInfoBlock = {\n  background: 'red',\n  padding: '3vw',\n  display: 'flex',\n  justifyContent: 'center'\n};\nvar cont = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  maxWidth: '1100px'\n};\nvar imgCont = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n};\nvar img = {\n  height: '27vw',\n  maxHeight: '350px',\n  width: '40vw',\n  maxWidth: '400px',\n  borderRadius: '3px'\n};\nvar textBl = {\n  flex: 2,\n  display: 'flex',\n  flexDirection: 'column',\n  maxWidth: '700px',\n  textAlign: 'left',\n  padding: '0 3vw 3vw 3vw 3vw'\n};\nvar headerContBlock = {\n  background: 'red',\n  fontSize: '25px',\n  fontWeight: '400',\n  width: '95%',\n  margin: '0 0 2.5vw 0',\n  padding: '0 0 0 4vw'\n};\nvar textContBlock = {\n  width: '95%',\n  height: '85%',\n  fontSize: '17px',\n  fontWeight: '300',\n  display: 'flex',\n  margin: '0 0 0 2.3vw'\n};\n\nfunction ImageInfoBlock(props) {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    window.addEventListener('resize', () => setWindowWidth(window.innerWidth));\n  }, []); // Dark theme or light theme based on props. default is light.\n\n  var color = props.isDark ? {\n    background: 'rgba(63, 73, 83, 1)',\n    color: 'white'\n  } : {\n    background: '',\n    color: 'rgba(44,42,41)'\n  };\n  imageInfoBlock = { ...imageInfoBlock,\n    ...color\n  }; // Display right to left, or left to right based on the 'flip' prop. Also takes care of mobile styling\n\n  var imgR;\n  var headerContBlockR;\n  var textContBlockR;\n\n  if (windowWidth < 600) {\n    // 'flip' prop doesn't matter here becauuse flexDirection has to be set to 'column'\n    cont = { ...cont,\n      flexDirection: 'column'\n    };\n    imgR = {\n      width: '100%',\n      borderRadius: '7px'\n    };\n    headerContBlockR = {\n      display: 'flex',\n      justifyContent: 'center',\n      fontSize: '4.5vw',\n      fontWeight: '400',\n      letterSpacing: '2px',\n      margin: '3vw 0 2vw 0'\n    };\n    textContBlockR = {\n      fontSize: '2.8vw',\n      fontWeight: '400',\n      margin: '0 3vw',\n      letterSpacing: '.3vw'\n    };\n  } else if (props.flip) {\n    // 'flip' prop is true, and the row should be viewed in reverse.\n    cont = { ...cont,\n      flexDirection: 'row-reverse'\n    };\n  } else {\n    // 'flip' prop is false, and the row should be viewed as is written naturally in JSX below\n    cont = { ...cont,\n      flexDirection: 'row'\n    };\n  }\n\n  if (windowWidth >= 1280) {\n    headerContBlockR = {\n      background: 'red',\n      width: '100%',\n      minWidth: '600px',\n      fontSize: '30px',\n      fontWeight: '400'\n    };\n    textContBlockR = {\n      background: 'green',\n      width: '100%',\n      height: '85%',\n      fontSize: '20px',\n      fontWeight: '300',\n      display: 'flex',\n      // justifyContent: 'center',\n      alignItems: 'center',\n      margin: '0 0 0 0'\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: imageInfoBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: cont,\n    className: \"imageInfoBlock\",\n    id: \"find\" + props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: imgCont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.image || './images/placeholder.jpg',\n    alt: props.headding,\n    style: imgR || img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 40\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: textBl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: headerContBlockR || headerContBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, props.headerContent), /*#__PURE__*/React.createElement(\"div\", {\n    style: textContBlockR || textContBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, props.textContent))));\n}\n\nexport default ImageInfoBlock;","map":{"version":3,"sources":["/Users/connor/Documents/cbsi-front-facing-website/src/components/ImageInfoBlock.js"],"names":["React","useState","useEffect","imageInfoBlock","background","padding","display","justifyContent","cont","flexDirection","maxWidth","imgCont","alignItems","img","height","maxHeight","width","borderRadius","textBl","flex","textAlign","headerContBlock","fontSize","fontWeight","margin","textContBlock","ImageInfoBlock","props","windowWidth","setWindowWidth","window","innerWidth","addEventListener","color","isDark","imgR","headerContBlockR","textContBlockR","letterSpacing","flip","minWidth","id","image","headding","headerContent","textContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nvar imageInfoBlock = {\n    background: 'red',\n    padding: '3vw',\n    display: 'flex',\n    justifyContent: 'center',\n}\n\nvar cont = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    maxWidth: '1100px',\n}\n\nvar imgCont = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n}\n\nvar img = {\n    height: '27vw',\n    maxHeight: '350px',\n    width: '40vw',\n    maxWidth: '400px',\n    borderRadius: '3px',\n}\n\nvar textBl = {\n    flex: 2,\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: '700px',\n    textAlign: 'left',\n    padding: '0 3vw 3vw 3vw 3vw',\n}\n\nvar headerContBlock = {\n    background: 'red',\n    fontSize: '25px',\n    fontWeight: '400',\n    width: '95%',\n    margin: '0 0 2.5vw 0',\n    padding: '0 0 0 4vw',\n}\n\nvar textContBlock = {\n    width: '95%',\n    height: '85%',\n    fontSize: '17px',\n    fontWeight: '300',\n    display: 'flex',\n    margin: '0 0 0 2.3vw',\n}\n\nfunction ImageInfoBlock(props) {\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', () => setWindowWidth((window.innerWidth)));\n    }, [])\n\n    // Dark theme or light theme based on props. default is light.\n    var color = props.isDark \n        ? { background: 'rgba(63, 73, 83, 1)', color: 'white' } \n        : { background: '', color: 'rgba(44,42,41)' };\n    \n    imageInfoBlock = {\n        ...imageInfoBlock,\n        ...color\n    }\n\n\n    // Display right to left, or left to right based on the 'flip' prop. Also takes care of mobile styling\n    var imgR;\n    var headerContBlockR;\n    var textContBlockR;\n    if(windowWidth < 600){  // 'flip' prop doesn't matter here becauuse flexDirection has to be set to 'column'\n\n        cont = { ...cont, flexDirection: 'column' };\n\n        imgR = {\n            width: '100%',\n            borderRadius: '7px',\n        }\n\n        headerContBlockR = {\n            display: 'flex',\n            justifyContent: 'center',\n            fontSize: '4.5vw',\n            fontWeight: '400',\n            letterSpacing: '2px',\n            margin: '3vw 0 2vw 0',\n        \n        }\n\n        textContBlockR = {\n            fontSize: '2.8vw',\n            fontWeight: '400',\n            margin: '0 3vw',\n            letterSpacing: '.3vw',\n        }\n\n    } else if(props.flip){  // 'flip' prop is true, and the row should be viewed in reverse.\n        cont = { ...cont, flexDirection: 'row-reverse' };\n    } else {    // 'flip' prop is false, and the row should be viewed as is written naturally in JSX below\n        cont = { ...cont, flexDirection: 'row' };\n    }\n\n    if(windowWidth >= 1280) {\n        headerContBlockR = {\n            background: 'red',\n            width: '100%',\n            minWidth: '600px',\n            fontSize: '30px',\n            fontWeight: '400',\n        \n        }\n\n        textContBlockR = {\n            background: 'green',\n            width: '100%',\n            height: '85%',\n            fontSize: '20px',\n            fontWeight: '300',\n            display: 'flex',\n            // justifyContent: 'center',\n            alignItems: 'center',\n            margin: '0 0 0 0',\n        }\n    }\n\n    return (\n        <div style={ imageInfoBlock }>\n            <div style={ cont } className=\"imageInfoBlock\" id={\"find\"+props.id}>\n                <div style={ imgCont }><img src={ props.image || './images/placeholder.jpg' } alt={props.headding} style={ imgR || img } /></div>\n                <div style={ textBl }>\n                    <div style={headerContBlockR || headerContBlock}>\n                        {props.headerContent}\n                    </div>\n                    <div style={textContBlockR || textContBlock}>\n                        {props.textContent}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ImageInfoBlock;\n"]},"metadata":{},"sourceType":"module"}