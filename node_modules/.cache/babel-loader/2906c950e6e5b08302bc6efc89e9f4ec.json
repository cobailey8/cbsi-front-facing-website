{"ast":null,"code":"var _jsxFileName = \"/Users/connor/Documents/React Projects/cbsi/src/components/ProjectSpotlight.js\";\nimport React from 'react';\nimport LinkingInfoCard from './LinkingInfoCard'; // Styles\n\nconst scrollableArea = {\n  background: 'rgba(63, 73, 83, 1)'\n};\nconst scAreaHeading = {\n  color: '#fff',\n  fontSize: '2.5vw',\n  fontWeight: '300',\n  letterSpacing: '2px',\n  margin: '20px 0 0 0',\n  WebkitTextStrokeWidth: '1px',\n  WebkitTextStrokeColor: '#eff',\n  textShadow: '1px 1px rgba( 0, 0, 0, .3 )'\n};\nconst scrollableAreaCont = {\n  display: 'block',\n  overflowX: 'scroll',\n  overflowY: 'none',\n  minHeight: '250px',\n  overflow: 'auto',\n  padding: '15px 0 15px 0',\n  margin: '5px 3vw 40px 3vw',\n  borderRadius: '50px',\n  borderRight: '2px solid lightgray',\n  borderLeft: '2px solid lightgray'\n};\nconst scrollableAreaContFlex = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  height: 'inherit'\n}; // End Styles\n\nexport class ScrollableArea extends React.Component {\n  render() {\n    var dataArr = []; //  Grabs data from the props.jsonData file and pushes each modal object into the dataArr array.\n\n    /*  \n        I feel like this needs an explanation:\n            This was done so that later on, I can set up a CMS for CBSI to update their site more easily. Eventually, Ill populate\n            that props.jsonData file using CMS options for any user grated such privelages. For now, it doesnt cause  any\n            performance issues, and will stay this way until the CMS portion is completed.\n             The modals are currently entirely created and populated using data from the props.jsonData file. \n    */\n\n    Object.keys(this.props.jsonData).forEach(key => dataArr.push(this.props.jsonData[key]));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: scrollableArea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: scAreaHeading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, this.props.heading), /*#__PURE__*/React.createElement(\"div\", {\n      style: scrollableAreaCont,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: scrollableAreaContFlex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, //Output a Modal component for each object in dataArr\n    dataArr.map(item => {\n      // Only display the card if item.spotlight is true\n      if (item.spotlight) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            margin: '1vw'\n          },\n          key: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(LinkingInfoCard, {\n          key: item.id,\n          image: item.image,\n          heading: item.heading,\n          text: item.text,\n          buttonTxt: item.buttonTxt,\n          link: item.link,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 45\n          }\n        }));\n      }\n    })))));\n  }\n\n}\nexport default ScrollableArea;","map":{"version":3,"sources":["/Users/connor/Documents/React Projects/cbsi/src/components/ProjectSpotlight.js"],"names":["React","LinkingInfoCard","scrollableArea","background","scAreaHeading","color","fontSize","fontWeight","letterSpacing","margin","WebkitTextStrokeWidth","WebkitTextStrokeColor","textShadow","scrollableAreaCont","display","overflowX","overflowY","minHeight","overflow","padding","borderRadius","borderRight","borderLeft","scrollableAreaContFlex","justifyContent","height","ScrollableArea","Component","render","dataArr","Object","keys","props","jsonData","forEach","key","push","heading","map","item","spotlight","id","image","text","buttonTxt","link"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAEA;;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,UAAU,EAAE;AADO,CAAvB;AAIA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,MADW;AAElBC,EAAAA,QAAQ,EAAE,OAFQ;AAGlBC,EAAAA,UAAU,EAAE,KAHM;AAIlBC,EAAAA,aAAa,EAAE,KAJG;AAKlBC,EAAAA,MAAM,EAAE,YALU;AAMlBC,EAAAA,qBAAqB,EAAE,KANL;AAOlBC,EAAAA,qBAAqB,EAAE,MAPL;AAQlBC,EAAAA,UAAU,EAAE;AARM,CAAtB;AAYA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,OAAO,EAAE,OADc;AAEvBC,EAAAA,SAAS,EAAE,QAFY;AAGvBC,EAAAA,SAAS,EAAE,MAHY;AAIvBC,EAAAA,SAAS,EAAE,OAJY;AAKvBC,EAAAA,QAAQ,EAAE,MALa;AAMvBC,EAAAA,OAAO,EAAE,eANc;AAOvBV,EAAAA,MAAM,EAAE,kBAPe;AAQvBW,EAAAA,YAAY,EAAE,MARS;AASvBC,EAAAA,WAAW,EAAE,qBATU;AAUvBC,EAAAA,UAAU,EAAE;AAVW,CAA3B;AAaA,MAAMC,sBAAsB,GAAG;AAC3BT,EAAAA,OAAO,EAAE,MADkB;AAE3BU,EAAAA,cAAc,EAAE,eAFW;AAG3BC,EAAAA,MAAM,EAAE;AAHmB,CAA/B,C,CAKA;;AAEA,OAAO,MAAMC,cAAN,SAA6B1B,KAAK,CAAC2B,SAAnC,CAA6C;AAEhDC,EAAAA,MAAM,GAAG;AAGL,QAAIC,OAAO,GAAG,EAAd,CAHK,CAKL;;AACA;;;;;;;;AAQAC,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,QAAvB,EAAiCC,OAAjC,CAAyCC,GAAG,IAAIN,OAAO,CAACO,IAAR,CAAa,KAAKJ,KAAL,CAAWC,QAAX,CAAoBE,GAApB,CAAb,CAAhD;AAEA,wBACI,uDACA;AAAK,MAAA,KAAK,EAAGjC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAGE,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAK4B,KAAL,CAAWK,OAAxC,CADJ,eAEI;AAAK,MAAA,KAAK,EAAGxB,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAGU,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ;AACAM,IAAAA,OAAO,CAACS,GAAR,CAAYC,IAAI,IAAI;AAEhB;AACA,UAAIA,IAAI,CAACC,SAAT,EAAoB;AAChB,4BACI;AAAK,UAAA,KAAK,EAAE;AAAC/B,YAAAA,MAAM,EAAE;AAAT,WAAZ;AAA6B,UAAA,GAAG,EAAG8B,IAAI,CAACE,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,eAAD;AACI,UAAA,GAAG,EAAGF,IAAI,CAACE,EADf;AAEI,UAAA,KAAK,EAAGF,IAAI,CAACG,KAFjB;AAGI,UAAA,OAAO,EAAGH,IAAI,CAACF,OAHnB;AAII,UAAA,IAAI,EAAGE,IAAI,CAACI,IAJhB;AAKI,UAAA,SAAS,EAAGJ,IAAI,CAACK,SALrB;AAMI,UAAA,IAAI,EAAGL,IAAI,CAACM,IANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAYH;AACJ,KAjBD,CAHR,CADJ,CAFJ,CADA,CADJ;AAgCH;;AAlD+C;AAqDpD,eAAenB,cAAf","sourcesContent":["import React from 'react';\nimport LinkingInfoCard from './LinkingInfoCard';\n\n// Styles\nconst scrollableArea = {\n    background: 'rgba(63, 73, 83, 1)',\n}\n\nconst scAreaHeading = {\n    color: '#fff',\n    fontSize: '2.5vw',\n    fontWeight: '300',\n    letterSpacing: '2px',\n    margin: '20px 0 0 0',\n    WebkitTextStrokeWidth: '1px',\n    WebkitTextStrokeColor: '#eff',\n    textShadow: '1px 1px rgba( 0, 0, 0, .3 )',\n\n}\n\nconst scrollableAreaCont = {\n    display: 'block',\n    overflowX: 'scroll',\n    overflowY: 'none',\n    minHeight: '250px',\n    overflow: 'auto',\n    padding: '15px 0 15px 0',\n    margin: '5px 3vw 40px 3vw',\n    borderRadius: '50px',\n    borderRight: '2px solid lightgray',\n    borderLeft: '2px solid lightgray',\n}\n\nconst scrollableAreaContFlex = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    height: 'inherit',\n}\n// End Styles\n\nexport class ScrollableArea extends React.Component {\n\n    render() {\n        \n\n        var dataArr = [];\n\n        //  Grabs data from the props.jsonData file and pushes each modal object into the dataArr array.\n        /*  \n            I feel like this needs an explanation:\n                This was done so that later on, I can set up a CMS for CBSI to update their site more easily. Eventually, Ill populate\n                that props.jsonData file using CMS options for any user grated such privelages. For now, it doesnt cause  any\n                performance issues, and will stay this way until the CMS portion is completed.\n\n                The modals are currently entirely created and populated using data from the props.jsonData file. \n        */\n        Object.keys(this.props.jsonData).forEach(key => dataArr.push(this.props.jsonData[key]));\n\n        return (\n            <>\n            <div style={ scrollableArea }>\n                <h1 style={ scAreaHeading }>{this.props.heading}</h1>\n                <div style={ scrollableAreaCont }>\n                    <div style={ scrollableAreaContFlex }>\n                        {\n                            //Output a Modal component for each object in dataArr\n                            dataArr.map(item => {\n                                \n                                // Only display the card if item.spotlight is true\n                                if (item.spotlight) {\n                                    return(\n                                        <div style={{margin: '1vw'}} key={ item.id }>\n                                            <LinkingInfoCard \n                                                key={ item.id }\n                                                image={ item.image } \n                                                heading={ item.heading } \n                                                text={ item.text } \n                                                buttonTxt={ item.buttonTxt } \n                                                link={ item.link }\n                                            />\n                                        </div>\n                                    )\n                                }\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default ScrollableArea;\n"]},"metadata":{},"sourceType":"module"}