{"version":3,"file":"index.ie11.development.js","sources":["../src/utils/isHTMLElement.ts","../src/constants.ts","../src/logic/attachEventListeners.ts","../src/utils/isNullOrUndefined.ts","../src/utils/isArray.ts","../src/utils/isObject.ts","../src/utils/isKey.ts","../src/utils/stringToPath.ts","../src/utils/set.ts","../src/logic/transformToNestObject.ts","../src/utils/isUndefined.ts","../src/utils/unique.ts","../src/utils/get.ts","../src/logic/focusOnErrorField.ts","../src/logic/removeAllEventListeners.ts","../src/logic/getRadioValue.ts","../src/logic/getMultipleSelectValue.ts","../src/utils/isRadioInput.ts","../src/utils/isFileInput.ts","../src/utils/isCheckBoxInput.ts","../src/utils/isMultipleSelect.ts","../src/logic/getCheckboxValue.ts","../src/logic/getFieldValue.ts","../src/utils/isDetached.ts","../src/utils/isEmptyObject.ts","../src/utils/unset.ts","../src/logic/findRemovedFieldAndRemoveListener.ts","../src/utils/isString.ts","../src/utils/deepMerge.ts","../src/logic/getFieldsValues.ts","../src/utils/isSameError.ts","../src/logic/shouldRenderBasedOnError.ts","../src/utils/isRegex.ts","../src/logic/getValueAndMessage.ts","../src/utils/isFunction.ts","../src/utils/isBoolean.ts","../src/utils/isMessage.ts","../src/logic/getValidateError.ts","../src/logic/appendErrors.ts","../src/logic/validateField.ts","../src/utils/isPrimitive.ts","../src/utils/getPath.ts","../src/logic/assignWatchFields.ts","../src/logic/skipValidation.ts","../src/logic/getFieldArrayParentName.ts","../src/logic/deepEqual.ts","../src/logic/isNameInFieldArray.ts","../src/utils/isSelectInput.ts","../src/utils/onDomRemove.ts","../src/utils/validationModeChecker.ts","../src/utils/isRadioOrCheckbox.ts","../src/useForm.ts","../src/useFormContext.tsx","../src/logic/generateId.ts","../src/utils/remove.ts","../src/utils/move.ts","../src/utils/swap.ts","../src/utils/prepend.ts","../src/utils/insert.ts","../src/utils/fillEmptyArray.ts","../src/utils/filterBooleanArray.ts","../src/useFieldArray.ts","../src/useWatch.ts","../src/logic/getInputValue.ts","../src/controller.tsx"],"sourcesContent":["export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { ValidationMode } from './types/form';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  all: 'all',\n};\n\nexport const VALUE = 'value';\n\nexport const SELECT = 'select';\n\nexport const UNDEFINED = 'undefined';\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Field } from '../types/form';\n\nexport default function attachEventListeners(\n  { ref }: Field,\n  shouldAttachChangeEvent: boolean,\n  handleChange?: EventListenerOrEventListenerObject,\n): void {\n  if (isHTMLElement(ref) && handleChange) {\n    ref.addEventListener(\n      shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT,\n      handleChange,\n    );\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\n","export default (value: unknown): value is null | undefined => value == null;\n","export default <T>(value: unknown): value is T[] => Array.isArray(value);\n","import isNullOrUndefined from './isNullOrUndefined';\nimport isArray from './isArray';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) && !isArray(value) && isObjectType(value);\n","import isArray from './isArray';\n\nexport default (value: [] | string) =>\n  !isArray(value) &&\n  (/^\\w*$/.test(value) ||\n    !/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/.test(value));\n","export default (input: string): (string | number)[] => {\n  const result: (string | number)[] = [];\n\n  input.replace(\n    /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,\n    (\n      match: string,\n      mathNumber: string,\n      mathQuote: string,\n      originalString: string,\n    ): any => {\n      result.push(\n        mathQuote\n          ? originalString.replace(/\\\\(\\\\)?/g, '$1')\n          : mathNumber || match,\n      );\n    },\n  );\n\n  return result;\n};\n","import isObject from './isObject';\nimport isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport { FieldValues } from '../types/form';\n\nexport default function set(object: FieldValues, path: string, value: any) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue: string | object = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import set from '../utils/set';\nimport isKey from '../utils/isKey';\nimport { FieldValues } from '../types/form';\n\nexport default (data: FieldValues): any =>\n  Object.entries(data).reduce(\n    (previous: FieldValues, [key, value]): FieldValues => {\n      if (!isKey(key)) {\n        set(previous, key, value);\n        return previous;\n      }\n\n      return { ...previous, [key]: value };\n    },\n    {},\n  );\n","export default (val: unknown): val is undefined => val === undefined;\n","export default (value: any[]) => value.filter(Boolean);\n","import isUndefined from './isUndefined';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport unique from './unique';\n\nexport default (obj: any, path: string, defaultValue?: any) => {\n  const result = unique(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path])\n      ? defaultValue\n      : obj[path]\n    : result;\n};\n","import get from '../utils/get';\nimport { FieldErrors, FieldRefs } from '../types/form';\n\nexport default <TFieldValues>(\n  fields: FieldRefs<TFieldValues>,\n  fieldErrors: FieldErrors<TFieldValues>,\n) => {\n  for (const key in fields) {\n    if (get(fieldErrors, key)) {\n      const field = fields[key];\n\n      if (field) {\n        if (field.ref.focus) {\n          field.ref.focus();\n\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n\n          break;\n        }\n      }\n    }\n  }\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Ref } from '../types/form';\n\nexport default (\n  ref: Ref,\n  validateWithStateUpdate: EventListenerOrEventListenerObject,\n): void => {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\n","import isArray from '../utils/isArray';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype RadioFieldResult = {\n  isValid: boolean;\n  value: number | string;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: '',\n};\n\nexport default (options?: RadioOrCheckboxOption[]): RadioFieldResult =>\n  isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.ref.checked\n            ? {\n                isValid: true,\n                value: option.ref.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","export default (\n  options: HTMLOptionElement[] | HTMLOptionsCollection,\n): string[] =>\n  [...options]\n    .filter(({ selected }): boolean => selected)\n    .map(({ value }): string => value);\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-multiple`;\n","import isArray from '../utils/isArray';\nimport isUndefined from '../utils/isUndefined';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: RadioOrCheckboxOption[]): CheckboxFieldResult => {\n  if (isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.ref.checked)\n        .map(({ ref: { value } }) => value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    const { checked, value, attributes } = options[0].ref;\n\n    return checked\n      ? attributes && !isUndefined((attributes as any).value)\n        ? isUndefined(value) || value === ''\n          ? validResult\n          : { value: value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isFileInput from '../utils/isFileInput';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport getCheckboxValue from './getCheckboxValue';\nimport { FieldRefs, FieldValues, InternalFieldName } from '../types/form';\n\nexport default function getFieldValue<TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  name: InternalFieldName<TFieldValues>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n) {\n  const field = fieldsRef.current[name]!;\n\n  if (field) {\n    const {\n      ref: { value },\n      ref,\n    } = field;\n\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n\n    if (isRadioInput(ref)) {\n      return getRadioValue(field.options).value;\n    }\n\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n\n    if (isCheckBox(ref)) {\n      return getCheckboxValue(field.options).value;\n    }\n\n    return value;\n  }\n\n  if (unmountFieldsStateRef) {\n    return unmountFieldsStateRef.current[name];\n  }\n}\n","import { Ref } from '../types/form';\n\nexport default function isDetached(element: Ref): boolean {\n  if (!element) {\n    return true;\n  }\n\n  if (\n    !(element instanceof HTMLElement) ||\n    element.nodeType === Node.DOCUMENT_NODE\n  ) {\n    return false;\n  }\n\n  return isDetached(element.parentNode as Ref);\n}\n","import isObject from './isObject';\nimport { EmptyObject } from '../types/utils';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport isEmptyObject from './isEmptyObject';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const path = updatePath.slice(0, -1);\n  const length = path.length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef = undefined;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef = undefined;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (isArray(objectRef) &&\n            !objectRef.filter((data) => isObject(data) && !isEmptyObject(data))\n              .length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import * as React from 'react';\nimport removeAllEventListeners from './removeAllEventListeners';\nimport getFieldValue from './getFieldValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDetached from '../utils/isDetached';\nimport isArray from '../utils/isArray';\nimport unset from '../utils/unset';\nimport unique from '../utils/unique';\nimport isUndefined from '../utils/isUndefined';\nimport { Field, FieldRefs, FieldValues, Ref } from '../types/form';\n\nconst isSameRef = (fieldValue: Field, ref: Ref) =>\n  fieldValue && fieldValue.ref === ref;\n\nexport default function findRemovedFieldAndRemoveListener<\n  TFieldValues extends FieldValues\n>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  handleChange: ({ type, target }: Event) => Promise<void | boolean>,\n  field: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n  shouldUnregister?: boolean,\n  forceDelete?: boolean,\n): void {\n  const {\n    ref,\n    ref: { name, type },\n    mutationWatcher,\n  } = field;\n  const fieldRef = fieldsRef.current[name] as Field;\n\n  if (!shouldUnregister) {\n    const value = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n\n    if (!isUndefined(value)) {\n      unmountFieldsStateRef.current[name] = value;\n    }\n  }\n\n  if (!type) {\n    delete fieldsRef.current[name];\n    return;\n  }\n\n  if ((isRadioInput(ref) || isCheckBoxInput(ref)) && fieldRef) {\n    const { options } = fieldRef;\n\n    if (isArray(options) && options.length) {\n      unique(options).forEach((option, index): void => {\n        const { ref, mutationWatcher } = option;\n        if ((ref && isDetached(ref) && isSameRef(option, ref)) || forceDelete) {\n          removeAllEventListeners(ref, handleChange);\n\n          if (mutationWatcher) {\n            mutationWatcher.disconnect();\n          }\n\n          unset(options, `[${index}]`);\n        }\n      });\n\n      if (options && !unique(options).length) {\n        delete fieldsRef.current[name];\n      }\n    } else {\n      delete fieldsRef.current[name];\n    }\n  } else if ((isDetached(ref) && isSameRef(fieldRef, ref)) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n\n    if (mutationWatcher) {\n      mutationWatcher.disconnect();\n    }\n\n    delete fieldsRef.current[name];\n  }\n}\n","export default (value: unknown): value is string => typeof value === 'string';\n","import isObject from './isObject';\n\nexport function deepMerge<\n  T extends Record<keyof T, any>,\n  U extends Record<keyof U, any>\n>(target: T, source: U): T & U {\n  if (!isObject(target) || !isObject(source)) {\n    return source;\n  }\n\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    if (isObject(targetValue) && isObject(sourceValue)) {\n      target[key] = deepMerge(targetValue, sourceValue);\n    } else {\n      target[key] = sourceValue;\n    }\n  }\n\n  return target;\n}\n","import * as React from 'react';\nimport getFieldValue from './getFieldValue';\nimport isString from '../utils/isString';\nimport isArray from '../utils/isArray';\nimport { deepMerge } from '../utils/deepMerge';\nimport isUndefined from '../utils/isUndefined';\nimport { InternalFieldName, FieldValues, FieldRefs } from '../types/form';\nimport transformToNestObject from './transformToNestObject';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n  search?:\n    | InternalFieldName<TFieldValues>\n    | InternalFieldName<TFieldValues>[]\n    | { nest: boolean },\n) => {\n  const output = {} as TFieldValues;\n\n  for (const name in fieldsRef.current) {\n    if (\n      isUndefined(search) ||\n      (isString(search)\n        ? name.startsWith(search)\n        : isArray(search) && search.find((data) => name.startsWith(data)))\n    ) {\n      output[name as InternalFieldName<TFieldValues>] = getFieldValue(\n        fieldsRef,\n        name,\n      );\n    }\n  }\n\n  return deepMerge(\n    transformToNestObject((unmountFieldsStateRef || {}).current || {}),\n    transformToNestObject(output),\n  );\n};\n","import isObject from './isObject';\nimport { FieldError } from '../types/form';\n\nexport default (\n  error: FieldError | undefined,\n  { type, types = {}, message }: FieldError,\n): boolean =>\n  isObject(error) &&\n  error.type === type &&\n  error.message === message &&\n  Object.keys(error.types || {}).length === Object.keys(types).length &&\n  Object.entries(error.types || {}).every(\n    ([key, value]) => types[key] === value,\n  );\n","import isEmptyObject from '../utils/isEmptyObject';\nimport isSameError from '../utils/isSameError';\nimport get from '../utils/get';\nimport {\n  FieldValues,\n  InternalFieldName,\n  FieldErrors,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default function shouldRenderBasedOnError<\n  TFieldValues extends FieldValues\n>({\n  errors,\n  name,\n  error,\n  validFields,\n  fieldsWithValidation,\n}: {\n  errors: FieldErrors<TFieldValues>;\n  error: FlatFieldErrors<TFieldValues>;\n  name: InternalFieldName<TFieldValues>;\n  validFields: Set<InternalFieldName<TFieldValues>>;\n  fieldsWithValidation: Set<InternalFieldName<TFieldValues>>;\n}): boolean {\n  const isFieldValid = isEmptyObject(error);\n  const isFormValid = isEmptyObject(errors);\n  const currentFieldError = get(error, name);\n  const existFieldError = get(errors, name);\n\n  if (isFieldValid && validFields.has(name)) {\n    return false;\n  }\n\n  if (\n    isFormValid !== isFieldValid ||\n    (!isFormValid && !existFieldError) ||\n    (isFieldValid && fieldsWithValidation.has(name) && !validFields.has(name))\n  ) {\n    return true;\n  }\n\n  return currentFieldError && !isSameError(existFieldError, currentFieldError);\n}\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport { ValidationRule, ValidationValueMessage } from '../types/form';\n\nconst isValueMessage = (\n  value?: ValidationRule,\n): value is ValidationValueMessage => isObject(value) && !isRegex(value);\n\nexport default (validationData?: ValidationRule) =>\n  isValueMessage(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import { isValidElement } from 'react';\nimport isString from '../utils/isString';\nimport isObject from '../utils/isObject';\nimport { Message } from '../types/form';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || (isObject(value) && isValidElement(value));\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport { FieldError, ValidateResult, Ref } from '../types/form';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (isMessage(result) || (isBoolean(result) && !result)) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import {\n  InternalFieldName,\n  ValidateResult,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default <TFieldValues>(\n  name: InternalFieldName<TFieldValues>,\n  validateAllFieldCriteria: boolean,\n  errors: FlatFieldErrors<TFieldValues>,\n  type: string,\n  message: ValidateResult,\n) => {\n  if (validateAllFieldCriteria) {\n    const error = errors[name];\n\n    return {\n      ...error,\n      types: {\n        ...(error && error.types ? error.types : {}),\n        [type]: message || true,\n      },\n    };\n  }\n\n  return {};\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getCheckboxValue from './getCheckboxValue';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isRadioInput from '../utils/isRadioInput';\nimport getValueAndMessage from './getValueAndMessage';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isString from '../utils/isString';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isObject from '../utils/isObject';\nimport isFunction from '../utils/isFunction';\nimport getFieldsValue from './getFieldValue';\nimport isRegex from '../utils/isRegex';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport getValidateError from './getValidateError';\nimport appendErrors from './appendErrors';\nimport { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldValues,\n  FieldRefs,\n  Message,\n  FieldError,\n  InternalFieldName,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default async <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  validateAllFieldCriteria: boolean,\n  {\n    ref,\n    ref: { type, value },\n    options,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n  }: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n): Promise<FlatFieldErrors<TFieldValues>> => {\n  const fields = fieldsRef.current;\n  const name: InternalFieldName<TFieldValues> = ref.name;\n  const error: FlatFieldErrors<TFieldValues> = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = value === '';\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...(exceedMax\n        ? appendErrorsCurry(maxType, message)\n        : appendErrorsCurry(minType, message)),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\n      (isBoolean(value) && !value) ||\n      (isCheckBox && !getCheckboxValue(options).isValid) ||\n      (isRadio && !getRadioValue(options).isValid))\n  ) {\n    const { value: requiredValue, message: requiredMessage } = isMessage(\n      required,\n    )\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (requiredValue) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message: requiredMessage,\n        ref: isRadioOrCheckbox\n          ? ((fields[name] as Field).options || [])[0].ref\n          : ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, requiredMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (!isNullOrUndefined(min) || !isNullOrUndefined(max)) {\n    let exceedMax;\n    let exceedMin;\n    const { value: maxValue, message: maxMessage } = getValueAndMessage(max);\n    const { value: minValue, message: minMessage } = getValueAndMessage(min);\n\n    if (type === 'number' || (!type && !isNaN(value))) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(value);\n      if (!isNullOrUndefined(maxValue)) {\n        exceedMax = valueNumber > maxValue;\n      }\n      if (!isNullOrUndefined(minValue)) {\n        exceedMin = valueNumber < minValue;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(value);\n      if (isString(maxValue)) {\n        exceedMax = valueDate > new Date(maxValue);\n      }\n      if (isString(minValue)) {\n        exceedMin = valueDate < new Date(minValue);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxMessage,\n        minMessage,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (isString(value) && !isEmpty && (maxLength || minLength)) {\n    const {\n      value: maxLengthValue,\n      message: maxLengthMessage,\n    } = getValueAndMessage(maxLength);\n    const {\n      value: minLengthValue,\n      message: minLengthMessage,\n    } = getValueAndMessage(minLength);\n    const inputLength = value.toString().length;\n    const exceedMax =\n      !isNullOrUndefined(maxLengthValue) && inputLength > maxLengthValue;\n    const exceedMin =\n      !isNullOrUndefined(minLengthValue) && inputLength < minLengthValue;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxLengthMessage, minLengthMessage);\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty) {\n    const { value: patternValue, message: patternMessage } = getValueAndMessage(\n      pattern,\n    );\n\n    if (isRegex(patternValue) && !patternValue.test(value)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message: patternMessage,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    const fieldValue = getFieldsValue(fieldsRef, name, unmountFieldsStateRef);\n    const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n\n    if (isFunction(validate)) {\n      const result = await validate(fieldValue);\n      const validateError = getValidateError(result, validateRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n      for (const [key, validateFunction] of Object.entries(validate)) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateResult = await validateFunction(fieldValue);\n        const validateError = getValidateError(\n          validateResult,\n          validateRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: validateRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  return error;\n};\n","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nimport { Primitive } from '../types/utils';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isPrimitive from './isPrimitive';\nimport isObject from './isObject';\nimport { FieldValues, InternalFieldName } from '../types/form';\n\nexport const getPath = <TFieldValues extends FieldValues = FieldValues>(\n  path: InternalFieldName<TFieldValues>,\n  values: TFieldValues | any[],\n): any[] => {\n  const getInnerPath = (\n    value: any,\n    key: number | string,\n    isObject?: boolean,\n  ) => {\n    const pathWithIndex = isObject ? `${path}.${key}` : `${path}[${key}]`;\n    return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\n  };\n\n  return Object.entries(values)\n    .map(([key, value]) => getInnerPath(value, key, isObject(values)))\n    .flat(Infinity);\n};\n","import get from '../utils/get';\nimport { getPath } from '../utils/getPath';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isArray from '../utils/isArray';\nimport { DeepPartial } from '../types/utils';\nimport {\n  FieldValue,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n} from '../types/form';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldValues: TFieldValues,\n  fieldName: InternalFieldName<TFieldValues>,\n  watchFields: Set<InternalFieldName<TFieldValues>>,\n  inputValue: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  isSingleField?: boolean,\n):\n  | FieldValue<TFieldValues>\n  | UnpackNestedValue<DeepPartial<TFieldValues>>\n  | undefined => {\n  let value;\n\n  watchFields.add(fieldName);\n\n  if (isEmptyObject(fieldValues)) {\n    value = undefined;\n  } else {\n    value = get(fieldValues, fieldName);\n\n    if (isObject(value) || isArray(value)) {\n      getPath<TFieldValues>(\n        fieldName,\n        value as TFieldValues,\n      ).forEach((name: string) => watchFields.add(name));\n    }\n  }\n\n  return isUndefined(value)\n    ? isSingleField\n      ? inputValue\n      : get(inputValue, fieldName)\n    : value;\n};\n","export default ({\n  isOnBlur,\n  isOnChange,\n  isReValidateOnBlur,\n  isReValidateOnChange,\n  isBlurEvent,\n  isSubmitted,\n  isOnAll,\n}: {\n  isOnAll?: boolean;\n  isOnBlur?: boolean;\n  isOnChange?: boolean;\n  isReValidateOnBlur?: boolean;\n  isReValidateOnChange?: boolean;\n  isBlurEvent?: boolean;\n  isSubmitted?: boolean;\n}) => {\n  if (isOnAll) {\n    return false;\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","export default (name: string) => name.substring(0, name.indexOf('['));\n","import isObject from '../utils/isObject';\nimport isArray from '../utils/isArray';\n\nexport default function deepEqual(object1: any = [], object2: any = []) {\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n    const val2 = object2[key];\n\n    if (\n      (isObject(val1) || isArray(val1)) && (isObject(val2) || isArray(val2))\n        ? !deepEqual(val1, val2)\n        : val1 !== val2\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","export const isMatchFieldArrayName = (name: string, searchName: string) =>\n  RegExp(\n    `^${searchName}[\\\\d+]`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]'),\n  ).test(name);\n\nexport default (names: Set<string>, name: string) =>\n  [...names].some((current) => isMatchFieldArrayName(name, current));\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-one`;\n","import { Ref } from '../types/form';\nimport isDetached from './isDetached';\n\nexport default function onDomRemove(\n  element: Ref,\n  onDetachCallback: () => void,\n): MutationObserver {\n  const observer = new MutationObserver((): void => {\n    if (isDetached(element)) {\n      observer.disconnect();\n      onDetachCallback();\n    }\n  });\n\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true,\n  });\n\n  return observer;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types/form';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n});\n","import isRadioInput from './isRadioInput';\nimport isCheckBoxInput from './isCheckBoxInput';\nimport { FieldElement } from '../types/form';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import * as React from 'react';\nimport attachEventListeners from './logic/attachEventListeners';\nimport transformToNestObject from './logic/transformToNestObject';\nimport focusOnErrorField from './logic/focusOnErrorField';\nimport findRemovedFieldAndRemoveListener from './logic/findRemovedFieldAndRemoveListener';\nimport getFieldsValues from './logic/getFieldsValues';\nimport getFieldValue from './logic/getFieldValue';\nimport shouldRenderBasedOnError from './logic/shouldRenderBasedOnError';\nimport validateField from './logic/validateField';\nimport assignWatchFields from './logic/assignWatchFields';\nimport skipValidation from './logic/skipValidation';\nimport getFieldArrayParentName from './logic/getFieldArrayParentName';\nimport deepEqual from './logic/deepEqual';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport isCheckBoxInput from './utils/isCheckBoxInput';\nimport isEmptyObject from './utils/isEmptyObject';\nimport isRadioInput from './utils/isRadioInput';\nimport isSelectInput from './utils/isSelectInput';\nimport isFileInput from './utils/isFileInput';\nimport isObject from './utils/isObject';\nimport { getPath } from './utils/getPath';\nimport isPrimitive from './utils/isPrimitive';\nimport isFunction from './utils/isFunction';\nimport isArray from './utils/isArray';\nimport isString from './utils/isString';\nimport isSameError from './utils/isSameError';\nimport isUndefined from './utils/isUndefined';\nimport onDomRemove from './utils/onDomRemove';\nimport get from './utils/get';\nimport set from './utils/set';\nimport unset from './utils/unset';\nimport modeChecker from './utils/validationModeChecker';\nimport isMultipleSelect from './utils/isMultipleSelect';\nimport unique from './utils/unique';\nimport isNullOrUndefined from './utils/isNullOrUndefined';\nimport isRadioOrCheckboxFunction from './utils/isRadioOrCheckbox';\nimport isHTMLElement from './utils/isHTMLElement';\nimport { EVENTS, UNDEFINED, VALIDATION_MODE } from './constants';\nimport {\n  UseFormMethods,\n  FieldValues,\n  UnpackNestedValue,\n  FieldName,\n  InternalFieldName,\n  FieldValue,\n  FieldErrors,\n  Field,\n  FieldRefs,\n  UseFormOptions,\n  ValidationRules,\n  SubmitHandler,\n  FieldElement,\n  FormStateProxy,\n  ReadFormState,\n  Ref,\n  HandleChange,\n  Touched,\n  FieldError,\n  RadioOrCheckboxOption,\n  OmitResetState,\n  DefaultValuesAtRender,\n  FlatFieldErrors,\n  NestedValue,\n  SetValueConfig,\n  ErrorOption,\n} from './types/form';\nimport { LiteralToPrimitive, DeepPartial, NonUndefined } from './types/utils';\n\nconst isWindowUndefined = typeof window === UNDEFINED;\nconst isWeb =\n  typeof document !== UNDEFINED &&\n  !isWindowUndefined &&\n  !isUndefined(window.HTMLElement);\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object\n>({\n  mode = VALIDATION_MODE.onSubmit,\n  reValidateMode = VALIDATION_MODE.onChange,\n  resolver,\n  context,\n  defaultValues = {} as UnpackNestedValue<DeepPartial<TFieldValues>>,\n  shouldFocusError = true,\n  shouldUnregister = true,\n  criteriaMode,\n}: UseFormOptions<TFieldValues, TContext> = {}): UseFormMethods<TFieldValues> {\n  const fieldsRef = React.useRef<FieldRefs<TFieldValues>>({});\n  const errorsRef = React.useRef<FieldErrors<TFieldValues>>({});\n  const touchedFieldsRef = React.useRef<Touched<TFieldValues>>({});\n  const fieldArrayDefaultValues = React.useRef<Record<string, unknown[]>>({});\n  const dirtyFieldsRef = React.useRef<Touched<TFieldValues>>({});\n  const watchFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const watchFieldsHookRef = React.useRef<\n    Record<string, Set<InternalFieldName<TFieldValues>>>\n  >({});\n  const watchFieldsHookRenderRef = React.useRef<Record<string, Function>>({});\n  const fieldsWithValidationRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const validFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const isValidRef = React.useRef(true);\n  const defaultValuesRef = React.useRef<\n    | FieldValue<UnpackNestedValue<TFieldValues>>\n    | UnpackNestedValue<DeepPartial<TFieldValues>>\n  >(defaultValues);\n  const defaultValuesAtRenderRef = React.useRef(\n    {} as DefaultValuesAtRender<TFieldValues>,\n  );\n  const isUnMount = React.useRef(false);\n  const isWatchAllRef = React.useRef(false);\n  const isSubmittedRef = React.useRef(false);\n  const isDirtyRef = React.useRef(false);\n  const submitCountRef = React.useRef(0);\n  const isSubmittingRef = React.useRef(false);\n  const handleChangeRef = React.useRef<HandleChange>();\n  const unmountFieldsStateRef = React.useRef<Record<string, any>>({});\n  const resetFieldArrayFunctionRef = React.useRef<Record<string, () => void>>(\n    {},\n  );\n  const contextRef = React.useRef(context);\n  const resolverRef = React.useRef(resolver);\n  const fieldArrayNamesRef = React.useRef<Set<string>>(new Set());\n  const [, render] = React.useState();\n  const modeRef = React.useRef(modeChecker(mode));\n  const {\n    current: { isOnSubmit, isOnAll },\n  } = modeRef;\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  const readFormStateRef = React.useRef<ReadFormState>({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    isSubmitted: isOnSubmit,\n    submitCount: !isProxyEnabled,\n    touched: !isProxyEnabled,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled,\n  });\n  const {\n    current: { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange },\n  } = React.useRef(modeChecker(reValidateMode));\n  contextRef.current = context;\n  resolverRef.current = resolver;\n\n  const reRender = React.useCallback(\n    () => !isUnMount.current && render({}),\n    [],\n  );\n\n  const shouldRenderBaseOnError = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      error: FlatFieldErrors<TFieldValues>,\n      shouldRender: boolean | null = false,\n    ): boolean | void => {\n      let shouldReRender =\n        shouldRender ||\n        shouldRenderBasedOnError<TFieldValues>({\n          errors: errorsRef.current,\n          error,\n          name,\n          validFields: validFieldsRef.current,\n          fieldsWithValidation: fieldsWithValidationRef.current,\n        });\n      const previousError = get(errorsRef.current, name);\n\n      if (isEmptyObject(error)) {\n        if (fieldsWithValidationRef.current.has(name) || resolverRef.current) {\n          validFieldsRef.current.add(name);\n          shouldReRender = shouldReRender || previousError;\n        }\n\n        errorsRef.current = unset(errorsRef.current, name);\n      } else {\n        validFieldsRef.current.delete(name);\n        shouldReRender =\n          shouldReRender ||\n          !previousError ||\n          !isSameError(previousError, error[name] as FieldError);\n\n        set(errorsRef.current, name, error[name]);\n      }\n\n      if (shouldReRender && !isNullOrUndefined(shouldRender)) {\n        reRender();\n        return true;\n      }\n    },\n    [],\n  );\n\n  const setFieldValue = React.useCallback(\n    (\n      { ref, options }: Field,\n      rawValue:\n        | FieldValue<TFieldValues>\n        | UnpackNestedValue<DeepPartial<TFieldValues>>\n        | undefined\n        | null\n        | boolean,\n    ) => {\n      const value =\n        isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\n          ? ''\n          : rawValue;\n\n      if (isRadioInput(ref) && options) {\n        options.forEach(\n          ({ ref: radioRef }: { ref: HTMLInputElement }) =>\n            (radioRef.checked = radioRef.value === value),\n        );\n      } else if (isFileInput(ref) && !isString(value)) {\n        ref.files = value as FileList;\n      } else if (isMultipleSelect(ref)) {\n        [...ref.options].forEach(\n          (selectRef) =>\n            (selectRef.selected = (value as string).includes(selectRef.value)),\n        );\n      } else if (isCheckBoxInput(ref) && options) {\n        options.length > 1\n          ? options.forEach(\n              ({ ref: checkboxRef }) =>\n                (checkboxRef.checked = String(\n                  value as string | boolean,\n                ).includes(checkboxRef.value)),\n            )\n          : (options[0].ref.checked = !!value);\n      } else {\n        ref.value = value;\n      }\n    },\n    [],\n  );\n\n  const setDirty = React.useCallback(\n    (name: InternalFieldName<TFieldValues>): boolean => {\n      const { isDirty, dirtyFields } = readFormStateRef.current;\n\n      if (!fieldsRef.current[name] || (!isDirty && !dirtyFields)) {\n        return false;\n      }\n\n      const isFieldDirty =\n        defaultValuesAtRenderRef.current[name] !==\n        getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      const isDirtyFieldExist = get(dirtyFieldsRef.current, name);\n      const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n      const previousIsDirty = isDirtyRef.current;\n\n      if (isFieldDirty) {\n        set(dirtyFieldsRef.current, name, true);\n      } else {\n        unset(dirtyFieldsRef.current, name);\n      }\n\n      isDirtyRef.current =\n        (isFieldArray &&\n          !deepEqual(\n            get(getValues(), getFieldArrayParentName(name)),\n            get(defaultValuesRef.current, getFieldArrayParentName(name)),\n          )) ||\n        !isEmptyObject(dirtyFieldsRef.current);\n\n      return (\n        (isDirty && previousIsDirty !== isDirtyRef.current) ||\n        (dirtyFields && isDirtyFieldExist !== get(dirtyFieldsRef.current, name))\n      );\n    },\n    [],\n  );\n\n  const executeValidation = React.useCallback(\n    async (\n      name: InternalFieldName<TFieldValues>,\n      skipReRender?: boolean,\n    ): Promise<boolean> => {\n      if (fieldsRef.current[name]) {\n        const error = await validateField<TFieldValues>(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          fieldsRef.current[name] as Field,\n          unmountFieldsStateRef,\n        );\n\n        shouldRenderBaseOnError(name, error, skipReRender ? null : false);\n\n        return isEmptyObject(error);\n      }\n\n      return false;\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const executeSchemaOrResolverValidation = React.useCallback(\n    async (\n      payload:\n        | InternalFieldName<TFieldValues>\n        | InternalFieldName<TFieldValues>[],\n    ) => {\n      const { errors } = await resolverRef.current!(\n        getValues() as TFieldValues,\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = isValidRef.current;\n      isValidRef.current = isEmptyObject(errors);\n\n      if (isArray(payload)) {\n        const isInputsValid = payload\n          .map((name) => {\n            const error = get(errors, name);\n\n            if (error) {\n              set(errorsRef.current, name, error);\n            } else {\n              unset(errorsRef.current, name);\n            }\n\n            return !error;\n          })\n          .every(Boolean);\n\n        reRender();\n\n        return isInputsValid;\n      } else {\n        const error = get(errors, payload);\n\n        shouldRenderBaseOnError(\n          payload,\n          (error ? { [payload]: error } : {}) as FlatFieldErrors<TFieldValues>,\n          previousFormIsValid !== isValidRef.current,\n        );\n\n        return !error;\n      }\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const trigger = React.useCallback(\n    async (\n      name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n    ): Promise<boolean> => {\n      const fields = name || Object.keys(fieldsRef.current);\n\n      if (resolverRef.current) {\n        return executeSchemaOrResolverValidation(fields);\n      }\n\n      if (isArray(fields)) {\n        const result = await Promise.all(\n          fields.map(async (data) => await executeValidation(data, true)),\n        );\n        reRender();\n        return result.every(Boolean);\n      }\n\n      return await executeValidation(fields);\n    },\n    [executeSchemaOrResolverValidation, executeValidation],\n  );\n\n  const setInternalValues = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues>,\n      { shouldDirty, shouldValidate }: SetValueConfig,\n    ) => {\n      getPath(name, value).forEach((fieldName) => {\n        const data = {};\n        const field = fieldsRef.current[fieldName];\n\n        if (field) {\n          set(data, name, value);\n          setFieldValue(field, get(data, fieldName));\n\n          if (shouldDirty) {\n            setDirty(fieldName);\n          }\n\n          if (shouldValidate) {\n            trigger(fieldName as FieldName<TFieldValues>);\n          }\n        }\n      });\n    },\n    [trigger, setFieldValue, setDirty],\n  );\n\n  const setInternalValue = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues> | null | undefined | boolean,\n      config: SetValueConfig,\n    ): boolean | void => {\n      if (fieldsRef.current[name]) {\n        setFieldValue(fieldsRef.current[name] as Field, value);\n        return config.shouldDirty && setDirty(name);\n      } else if (!isPrimitive(value)) {\n        setInternalValues(name, value, config);\n      }\n\n      if (!shouldUnregister) {\n        unmountFieldsStateRef.current[name] = value;\n      }\n\n      return true;\n    },\n    [setDirty, setFieldValue, setInternalValues],\n  );\n\n  const isFieldWatched = (name: string) =>\n    isWatchAllRef.current ||\n    watchFieldsRef.current.has(name) ||\n    watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n\n  const renderWatchedInputs = (name: string, found = true): boolean => {\n    if (!isEmptyObject(watchFieldsHookRef.current)) {\n      for (const key in watchFieldsHookRef.current) {\n        if (\n          name === '' ||\n          watchFieldsHookRef.current[key].has(name) ||\n          watchFieldsHookRef.current[key].has(getFieldArrayParentName(name)) ||\n          !watchFieldsHookRef.current[key].size\n        ) {\n          watchFieldsHookRenderRef.current[key]();\n          found = false;\n        }\n      }\n    }\n\n    return found;\n  };\n\n  function setValue<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    value: NonUndefined<TFieldValue> extends NestedValue<infer U>\n      ? U\n      : UnpackNestedValue<DeepPartial<LiteralToPrimitive<TFieldValue>>>,\n    config: SetValueConfig = {},\n  ): void {\n    const shouldRender =\n      setInternalValue(name, value as TFieldValues[string], config) ||\n      isFieldWatched(name);\n\n    renderWatchedInputs(name);\n\n    if (shouldRender) {\n      reRender();\n    }\n\n    if (config.shouldValidate) {\n      trigger(name as any);\n    }\n  }\n\n  handleChangeRef.current = handleChangeRef.current\n    ? handleChangeRef.current\n    : async ({ type, target }: Event): Promise<void | boolean> => {\n        const name = (target as Ref)!.name;\n        const field = fieldsRef.current[name];\n        let error: FlatFieldErrors<TFieldValues>;\n\n        if (field) {\n          const isBlurEvent = type === EVENTS.BLUR;\n          const shouldSkipValidation =\n            !isOnAll &&\n            skipValidation({\n              isBlurEvent,\n              isReValidateOnChange,\n              isReValidateOnBlur,\n              isSubmitted: isSubmittedRef.current,\n              ...modeRef.current,\n            });\n          let shouldRender = setDirty(name) || isFieldWatched(name);\n\n          if (\n            isBlurEvent &&\n            !get(touchedFieldsRef.current, name) &&\n            readFormStateRef.current.touched\n          ) {\n            set(touchedFieldsRef.current, name, true);\n            shouldRender = true;\n          }\n\n          if (shouldSkipValidation) {\n            renderWatchedInputs(name);\n            return shouldRender && reRender();\n          }\n\n          if (resolverRef.current) {\n            const { errors } = await resolverRef.current(\n              getValues() as TFieldValues,\n              contextRef.current,\n              isValidateAllFieldCriteria,\n            );\n            const previousFormIsValid = isValidRef.current;\n            isValidRef.current = isEmptyObject(errors);\n\n            error = (get(errors, name)\n              ? { [name]: get(errors, name) }\n              : {}) as FlatFieldErrors<TFieldValues>;\n\n            if (previousFormIsValid !== isValidRef.current) {\n              shouldRender = true;\n            }\n          } else {\n            error = await validateField<TFieldValues>(\n              fieldsRef,\n              isValidateAllFieldCriteria,\n              field,\n              unmountFieldsStateRef,\n            );\n          }\n\n          renderWatchedInputs(name);\n\n          if (!shouldRenderBaseOnError(name, error) && shouldRender) {\n            reRender();\n          }\n        }\n      };\n\n  function getValues(): UnpackNestedValue<TFieldValues>;\n  function getValues<TFieldName extends string, TFieldValue extends unknown>(\n    name: TFieldName,\n  ): TFieldName extends keyof TFieldValues\n    ? UnpackNestedValue<TFieldValues>[TFieldName]\n    : TFieldValue;\n  function getValues<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function getValues(payload?: string | string[]): unknown {\n    if (isString(payload)) {\n      return getFieldValue(fieldsRef, payload, unmountFieldsStateRef);\n    }\n\n    if (isArray(payload)) {\n      return payload.reduce(\n        (previous, name) => ({\n          ...previous,\n          [name]: getFieldValue(fieldsRef, name, unmountFieldsStateRef),\n        }),\n        {},\n      );\n    }\n\n    return getFieldsValues(fieldsRef, unmountFieldsStateRef);\n  }\n\n  const validateResolver = React.useCallback(\n    async (values = {}) => {\n      const { errors } = await resolverRef.current!(\n        {\n          ...defaultValuesRef.current,\n          ...getValues(),\n          ...values,\n        },\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = isValidRef.current;\n      isValidRef.current = isEmptyObject(errors);\n\n      if (previousFormIsValid !== isValidRef.current) {\n        reRender();\n      }\n    },\n    [isValidateAllFieldCriteria],\n  );\n\n  const removeFieldEventListener = React.useCallback(\n    (field: Field, forceDelete?: boolean) =>\n      findRemovedFieldAndRemoveListener(\n        fieldsRef,\n        handleChangeRef.current!,\n        field,\n        unmountFieldsStateRef,\n        shouldUnregister,\n        forceDelete,\n      ),\n    [shouldUnregister],\n  );\n\n  const removeFieldEventListenerAndRef = React.useCallback(\n    (field: Field | undefined, forceDelete?: boolean) => {\n      if (\n        field &&\n        (!isNameInFieldArray(fieldArrayNamesRef.current, field.ref.name) ||\n          forceDelete)\n      ) {\n        removeFieldEventListener(field, forceDelete);\n\n        if (shouldUnregister) {\n          [\n            errorsRef,\n            touchedFieldsRef,\n            dirtyFieldsRef,\n            defaultValuesAtRenderRef,\n          ].forEach((data) => unset(data.current, field.ref.name));\n\n          [fieldsWithValidationRef, validFieldsRef].forEach((data) =>\n            data.current.delete(field.ref.name),\n          );\n\n          if (\n            readFormStateRef.current.isValid ||\n            readFormStateRef.current.touched ||\n            readFormStateRef.current.isDirty\n          ) {\n            isDirtyRef.current = !isEmptyObject(dirtyFieldsRef.current);\n            reRender();\n\n            if (resolverRef.current) {\n              validateResolver();\n            }\n          }\n        }\n      }\n    },\n    [validateResolver, removeFieldEventListener],\n  );\n\n  function clearErrors(\n    name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    if (name) {\n      (isArray(name) ? name : [name]).forEach((inputName) =>\n        unset(errorsRef.current, inputName),\n      );\n    } else {\n      errorsRef.current = {};\n    }\n\n    reRender();\n  }\n\n  function setError(name: FieldName<TFieldValues>, error: ErrorOption): void {\n    isValidRef.current = false;\n\n    set(errorsRef.current, name, {\n      ...error,\n      ref: (fieldsRef.current[name] || {})!.ref,\n    });\n\n    reRender();\n  }\n\n  const watchInternal = React.useCallback(\n    (\n      fieldNames?: string | string[],\n      defaultValue?: unknown,\n      watchId?: string,\n    ) => {\n      const watchFields = watchId\n        ? watchFieldsHookRef.current[watchId]\n        : watchFieldsRef.current;\n      const combinedDefaultValues = isUndefined(defaultValue)\n        ? defaultValuesRef.current\n        : defaultValue;\n      const fieldValues = getFieldsValues<TFieldValues>(\n        fieldsRef,\n        unmountFieldsStateRef,\n        fieldNames,\n      );\n\n      if (isString(fieldNames)) {\n        return assignWatchFields<TFieldValues>(\n          fieldValues,\n          fieldNames,\n          watchFields,\n          isUndefined(defaultValue)\n            ? get(combinedDefaultValues, fieldNames)\n            : (defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>),\n          true,\n        );\n      }\n\n      if (isArray(fieldNames)) {\n        return fieldNames.reduce(\n          (previous, name) => ({\n            ...previous,\n            [name]: assignWatchFields<TFieldValues>(\n              fieldValues,\n              name,\n              watchFields,\n              combinedDefaultValues as UnpackNestedValue<\n                DeepPartial<TFieldValues>\n              >,\n            ),\n          }),\n          {},\n        );\n      }\n\n      if (isUndefined(watchId)) {\n        isWatchAllRef.current = true;\n      }\n\n      return transformToNestObject(\n        (!isEmptyObject(fieldValues) && fieldValues) ||\n          (combinedDefaultValues as FieldValues),\n      );\n    },\n    [],\n  );\n\n  function watch(): UnpackNestedValue<TFieldValues>;\n  function watch<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    defaultValue?: UnpackNestedValue<LiteralToPrimitive<TFieldValue>>,\n  ): UnpackNestedValue<LiteralToPrimitive<TFieldValue>>;\n  function watch<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n    defaultValues?: UnpackNestedValue<\n      DeepPartial<Pick<TFieldValues, TFieldName>>\n    >,\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function watch(\n    names: string[],\n    defaultValues?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  ): UnpackNestedValue<DeepPartial<TFieldValues>>;\n  function watch(\n    fieldNames?: string | string[],\n    defaultValue?: unknown,\n  ): unknown {\n    return watchInternal(fieldNames, defaultValue);\n  }\n\n  function unregister(\n    name: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    (isArray(name) ? name : [name]).forEach((fieldName) =>\n      removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true),\n    );\n  }\n\n  function registerFieldRef<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: TFieldElement & Ref,\n    validateOptions: ValidationRules | null = {},\n  ): ((name: InternalFieldName<TFieldValues>) => void) | void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ref.name) {\n        return console.warn('📋 Field is missing `name` attribute:', ref);\n      }\n\n      if (\n        fieldArrayNamesRef.current.has(ref.name.split(/\\[\\d+\\]$/)[0]) &&\n        !RegExp(\n          `^${ref.name.split(/\\[\\d+\\]$/)[0]}[\\\\d+]\\.\\\\w+`\n            .replace(/\\[/g, '\\\\[')\n            .replace(/\\]/g, '\\\\]'),\n        ).test(ref.name)\n      ) {\n        return console.warn(\n          '📋 `name` prop should be in object shape: name=\"test[index].name\". https://react-hook-form.com/api#useFieldArray',\n        );\n      }\n    }\n\n    const { name, type, value } = ref;\n    const fieldRefAndValidationOptions = {\n      ref,\n      ...validateOptions,\n    };\n    const fields = fieldsRef.current;\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n    let field = fields[name] as Field;\n    let isEmptyDefaultValue = true;\n    let isFieldArray;\n    let defaultValue;\n\n    if (\n      field &&\n      (isRadioOrCheckbox\n        ? isArray(field.options) &&\n          unique(field.options).find((option) => {\n            return value === option.ref.value && option.ref === ref;\n          })\n        : ref === field.ref)\n    ) {\n      fields[name] = {\n        ...field,\n        ...validateOptions,\n      };\n      return;\n    }\n\n    if (type) {\n      const mutationWatcher = onDomRemove(ref, () =>\n        removeFieldEventListenerAndRef(field),\n      );\n\n      field = isRadioOrCheckbox\n        ? {\n            options: [\n              ...unique((field && field.options) || []),\n              {\n                ref,\n                mutationWatcher,\n              } as RadioOrCheckboxOption,\n            ],\n            ref: { type, name },\n            ...validateOptions,\n          }\n        : {\n            ...fieldRefAndValidationOptions,\n            mutationWatcher,\n          };\n    } else {\n      field = fieldRefAndValidationOptions;\n    }\n\n    fields[name] = field;\n\n    const isEmptyUnmountFields = isUndefined(\n      get(unmountFieldsStateRef.current, name),\n    );\n\n    if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\n      defaultValue = get(\n        isEmptyUnmountFields\n          ? defaultValuesRef.current\n          : unmountFieldsStateRef.current,\n        name,\n      );\n      isEmptyDefaultValue = isUndefined(defaultValue);\n      isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(field, defaultValue);\n      }\n    }\n\n    if (resolver && !isFieldArray && readFormStateRef.current.isValid) {\n      validateResolver();\n    } else if (!isEmptyObject(validateOptions)) {\n      fieldsWithValidationRef.current.add(name);\n\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          field,\n          unmountFieldsStateRef,\n        ).then((error: FieldErrors) => {\n          const previousFormIsValid = isValidRef.current;\n\n          isEmptyObject(error)\n            ? validFieldsRef.current.add(name)\n            : (isValidRef.current = false);\n\n          if (previousFormIsValid !== isValidRef.current) {\n            reRender();\n          }\n        });\n      }\n    }\n\n    if (\n      !defaultValuesAtRenderRef.current[name] &&\n      !(isFieldArray && isEmptyDefaultValue)\n    ) {\n      const fieldValue = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      defaultValuesAtRenderRef.current[name] = isEmptyDefaultValue\n        ? isObject(fieldValue)\n          ? { ...fieldValue }\n          : fieldValue\n        : defaultValue;\n    }\n\n    if (type) {\n      attachEventListeners(\n        isRadioOrCheckbox && field.options\n          ? field.options[field.options.length - 1]\n          : field,\n        isRadioOrCheckbox || isSelectInput(ref),\n        handleChangeRef.current,\n      );\n    }\n  }\n\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    rules?: ValidationRules,\n  ): (ref: (TFieldElement & Ref) | null) => void;\n  function register(\n    name: FieldName<TFieldValues>,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: (TFieldElement & Ref) | null,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    refOrValidationOptions?:\n      | FieldName<TFieldValues>\n      | ValidationRules\n      | (TFieldElement & Ref)\n      | null,\n    rules?: ValidationRules,\n  ): ((ref: (TFieldElement & Ref) | null) => void) | void {\n    if (!isWindowUndefined) {\n      if (isString(refOrValidationOptions)) {\n        registerFieldRef({ name: refOrValidationOptions }, rules);\n      } else if (\n        isObject(refOrValidationOptions) &&\n        'name' in refOrValidationOptions\n      ) {\n        registerFieldRef(refOrValidationOptions, rules);\n      } else {\n        return (ref: (TFieldElement & Ref) | null) =>\n          ref && registerFieldRef(ref, refOrValidationOptions);\n      }\n    }\n  }\n\n  const handleSubmit = React.useCallback(\n    <TSubmitFieldValues extends FieldValues = TFieldValues>(\n      callback: SubmitHandler<TSubmitFieldValues>,\n    ) => async (e?: React.BaseSyntheticEvent): Promise<void> => {\n      if (e && e.preventDefault) {\n        e.preventDefault();\n        e.persist();\n      }\n      let fieldErrors: FieldErrors<TFieldValues> = {};\n      let fieldValues: FieldValues = getFieldsValues(\n        fieldsRef,\n        unmountFieldsStateRef,\n      );\n\n      if (readFormStateRef.current.isSubmitting) {\n        isSubmittingRef.current = true;\n        reRender();\n      }\n\n      try {\n        if (resolverRef.current) {\n          const { errors, values } = await resolverRef.current(\n            fieldValues as TFieldValues,\n            contextRef.current,\n            isValidateAllFieldCriteria,\n          );\n          errorsRef.current = errors;\n          fieldErrors = errors;\n          fieldValues = values;\n        } else {\n          for (const field of Object.values(fieldsRef.current)) {\n            if (field) {\n              const {\n                ref: { name },\n              } = field;\n\n              const fieldError = await validateField(\n                fieldsRef,\n                isValidateAllFieldCriteria,\n                field,\n                unmountFieldsStateRef,\n              );\n\n              if (fieldError[name]) {\n                set(fieldErrors, name, fieldError[name]);\n                validFieldsRef.current.delete(name);\n              } else if (fieldsWithValidationRef.current.has(name)) {\n                unset(errorsRef.current, name);\n                validFieldsRef.current.add(name);\n              }\n            }\n          }\n        }\n\n        if (\n          isEmptyObject(fieldErrors) &&\n          Object.keys(errorsRef.current).every((name) =>\n            Object.keys(fieldsRef.current).includes(name),\n          )\n        ) {\n          errorsRef.current = {};\n          reRender();\n          await callback(\n            fieldValues as UnpackNestedValue<TSubmitFieldValues>,\n            e,\n          );\n        } else {\n          errorsRef.current = {\n            ...errorsRef.current,\n            ...fieldErrors,\n          };\n          if (shouldFocusError) {\n            focusOnErrorField(fieldsRef.current, fieldErrors);\n          }\n        }\n      } finally {\n        isSubmittedRef.current = true;\n        isSubmittingRef.current = false;\n        submitCountRef.current = submitCountRef.current + 1;\n        reRender();\n      }\n    },\n    [shouldFocusError, isValidateAllFieldCriteria],\n  );\n\n  const resetRefs = ({\n    errors,\n    isDirty,\n    isSubmitted,\n    touched,\n    isValid,\n    submitCount,\n    dirtyFields,\n  }: OmitResetState) => {\n    if (!errors) {\n      errorsRef.current = {};\n    }\n\n    if (!touched) {\n      touchedFieldsRef.current = {};\n    }\n\n    if (!isValid) {\n      validFieldsRef.current = new Set();\n      fieldsWithValidationRef.current = new Set();\n      isValidRef.current = true;\n    }\n\n    if (!isDirty) {\n      isDirtyRef.current = false;\n    }\n\n    if (!dirtyFields) {\n      dirtyFieldsRef.current = {};\n    }\n\n    if (!isSubmitted) {\n      isSubmittedRef.current = false;\n    }\n\n    if (!submitCount) {\n      submitCountRef.current = 0;\n    }\n\n    defaultValuesAtRenderRef.current = {} as DefaultValuesAtRender<\n      TFieldValues\n    >;\n    fieldArrayDefaultValues.current = {};\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n  };\n\n  const reset = (\n    values?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n    omitResetState: OmitResetState = {},\n  ): void => {\n    if (isWeb) {\n      for (const field of Object.values(fieldsRef.current)) {\n        if (field) {\n          const { ref, options } = field;\n          const inputRef =\n            isRadioOrCheckboxFunction(ref) && isArray(options)\n              ? options[0].ref\n              : ref;\n\n          if (isHTMLElement(inputRef)) {\n            try {\n              inputRef.closest('form')!.reset();\n              break;\n            } catch {}\n          }\n        }\n      }\n    }\n\n    fieldsRef.current = {};\n\n    defaultValuesRef.current = values || { ...defaultValuesRef.current };\n\n    if (values) {\n      renderWatchedInputs('');\n    }\n\n    unmountFieldsStateRef.current = shouldUnregister ? {} : values || {};\n\n    Object.values(resetFieldArrayFunctionRef.current).forEach(\n      (resetFieldArray) => isFunction(resetFieldArray) && resetFieldArray(),\n    );\n\n    resetRefs(omitResetState);\n\n    reRender();\n  };\n\n  React.useEffect(() => {\n    isUnMount.current = false;\n\n    return () => {\n      isUnMount.current = true;\n      fieldsRef.current &&\n        process.env.NODE_ENV === 'production' &&\n        Object.values(fieldsRef.current).forEach((field) =>\n          removeFieldEventListenerAndRef(field, true),\n        );\n    };\n  }, [removeFieldEventListenerAndRef]);\n\n  if (!resolver) {\n    isValidRef.current =\n      validFieldsRef.current.size >= fieldsWithValidationRef.current.size &&\n      isEmptyObject(errorsRef.current);\n  }\n\n  const formState = {\n    dirtyFields: dirtyFieldsRef.current,\n    isSubmitted: isSubmittedRef.current,\n    submitCount: submitCountRef.current,\n    touched: touchedFieldsRef.current,\n    isDirty: isDirtyRef.current,\n    isSubmitting: isSubmittingRef.current,\n    isValid: isOnSubmit\n      ? isSubmittedRef.current && isEmptyObject(errorsRef.current)\n      : isValidRef.current,\n  };\n\n  const commonProps = {\n    trigger,\n    setValue: React.useCallback(setValue, [\n      reRender,\n      setInternalValue,\n      trigger,\n    ]),\n    getValues: React.useCallback(getValues, []),\n    register: React.useCallback(register, [defaultValuesRef.current]),\n    unregister: React.useCallback(unregister, []),\n    formState: isProxyEnabled\n      ? new Proxy<FormStateProxy<TFieldValues>>(formState, {\n          get: (obj, prop: keyof FormStateProxy) => {\n            if (\n              process.env.NODE_ENV !== 'production' &&\n              prop === 'isValid' &&\n              isOnSubmit\n            ) {\n              console.warn(\n                '📋 `formState.isValid` is applicable with `onChange` or `onBlur` mode. https://react-hook-form.com/api#formState',\n              );\n            }\n\n            if (prop in obj) {\n              readFormStateRef.current[prop] = true;\n              return obj[prop];\n            }\n\n            return undefined;\n          },\n        })\n      : formState,\n  };\n\n  const control = {\n    removeFieldEventListener,\n    renderWatchedInputs,\n    watchInternal,\n    reRender,\n    mode: modeRef.current,\n    reValidateMode: {\n      isReValidateOnBlur,\n      isReValidateOnChange,\n    },\n    errorsRef,\n    touchedFieldsRef,\n    fieldsRef,\n    isWatchAllRef,\n    watchFieldsRef,\n    resetFieldArrayFunctionRef,\n    watchFieldsHookRef,\n    watchFieldsHookRenderRef,\n    fieldArrayDefaultValues,\n    validFieldsRef,\n    dirtyFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayNamesRef,\n    isDirtyRef,\n    isSubmittedRef,\n    readFormStateRef,\n    defaultValuesRef,\n    unmountFieldsStateRef,\n    ...(resolver ? { validateSchemaIsValid: validateResolver } : {}),\n    ...commonProps,\n  };\n\n  return {\n    watch,\n    control,\n    handleSubmit,\n    reset: React.useCallback(reset, []),\n    clearErrors: React.useCallback(clearErrors, []),\n    setError: React.useCallback(setError, []),\n    errors: errorsRef.current,\n    ...commonProps,\n  };\n}\n","import * as React from 'react';\nimport { UseFormMethods, FieldValues } from './types/form';\nimport { FormProviderProps } from './types/props';\n\nconst FormContext = React.createContext<UseFormMethods | null>(null);\n\nFormContext.displayName = 'RHFContext';\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues\n>(): UseFormMethods<TFieldValues> =>\n  React.useContext(FormContext) as UseFormMethods<TFieldValues>;\n\nexport const FormProvider = <TFieldValues extends FieldValues>({\n  children,\n  ...props\n}: FormProviderProps<TFieldValues>) => (\n  <FormContext.Provider value={{ ...props } as UseFormMethods}>\n    {children}\n  </FormContext.Provider>\n);\n","import { UNDEFINED } from '../constants';\n\nexport default () => {\n  const d =\n    typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import isUndefined from './isUndefined';\nimport isArray from './isArray';\nimport unique from './unique';\n\nconst removeAt = <T>(data: T[], index: number): T[] => [\n  ...data.slice(0, index),\n  ...data.slice(index + 1),\n];\n\nfunction removeAtIndexes<T>(data: T[], index: number[]): T[] {\n  let k = -1;\n\n  while (++k < data.length) {\n    if (index.indexOf(k) >= 0) {\n      delete data[k];\n    }\n  }\n\n  return unique(data);\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : isArray(index)\n    ? removeAtIndexes(data, index)\n    : removeAt(data, index);\n","import isUndefined from './isUndefined';\nimport isArray from './isArray';\n\nexport default <T>(data: T[], from: number, to: number): (T | undefined)[] => {\n  if (isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined as any;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n\n  return [];\n};\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\n  const temp = [data[indexB], data[indexA]];\n  data[indexA] = temp[0];\n  data[indexB] = temp[1];\n};\n","import isArray from './isArray';\n\nexport default function prepend<T>(data: T[]): (T | undefined)[];\nexport default function prepend<T>(data: T[], value: T | T[]): T[];\nexport default function prepend<T>(\n  data: T[],\n  value?: T | T[],\n): (T | undefined)[] {\n  return [...(isArray(value) ? value : [value || undefined]), ...data];\n}\n","import isArray from './isArray';\n\nexport default function insert<T>(data: T[], index: number): (T | undefined)[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value: T | T[],\n): T[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value?: T | T[],\n): (T | undefined)[] {\n  return [\n    ...data.slice(0, index),\n    ...(isArray(value) ? value : [value || undefined]),\n    ...data.slice(index),\n  ];\n}\n","import isArray from './isArray';\n\nexport default <T>(value: T | T[]): undefined[] | undefined =>\n  isArray(value) ? Array(value.length).fill(undefined) : undefined;\n","import isArray from './isArray';\nimport isObject from './isObject';\n\nfunction mapValueToBoolean(value: any) {\n  if (isObject(value)) {\n    const object: any = {};\n\n    for (const key in value) {\n      object[key] = true;\n    }\n\n    return [object];\n  }\n\n  return [true];\n}\n\nexport const filterBooleanArray = <T>(value: T): T[] =>\n  isArray(value)\n    ? value.map(mapValueToBoolean).flat()\n    : mapValueToBoolean(value);\n","import * as React from 'react';\nimport { useFormContext } from './useFormContext';\nimport { isMatchFieldArrayName } from './logic/isNameInFieldArray';\nimport generateId from './logic/generateId';\nimport isObject from './utils/isObject';\nimport deepEqual from './logic/deepEqual';\nimport getFieldArrayParentName from './logic/getFieldArrayParentName';\nimport get from './utils/get';\nimport set from './utils/set';\nimport isUndefined from './utils/isUndefined';\nimport removeArrayAt from './utils/remove';\nimport unset from './utils/unset';\nimport moveArrayAt from './utils/move';\nimport swapArrayAt from './utils/swap';\nimport prependAt from './utils/prepend';\nimport isArray from './utils/isArray';\nimport insertAt from './utils/insert';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport { filterBooleanArray } from './utils/filterBooleanArray';\nimport unique from './utils/unique';\nimport {\n  Field,\n  FieldValues,\n  UseFieldArrayOptions,\n  Control,\n  ArrayField,\n} from './types/form';\n\nconst appendId = <TValue extends object, TKeyName extends string>(\n  value: TValue,\n  keyName: TKeyName,\n): Partial<ArrayField<TValue, TKeyName>> => ({\n  [keyName]: generateId(),\n  ...(isObject(value) ? value : { value }),\n});\n\nconst mapIds = <TData extends object, TKeyName extends string>(\n  data: TData | TData[],\n  keyName: TKeyName,\n) => (isArray(data) ? data : []).map((value) => appendId(value, keyName));\n\nexport const useFieldArray = <\n  TFieldArrayValues extends FieldValues = FieldValues,\n  TKeyName extends string = 'id',\n  TControl extends Control = Control\n>({\n  control,\n  name,\n  keyName = 'id' as TKeyName,\n}: UseFieldArrayOptions<TKeyName, TControl>) => {\n  const methods = useFormContext();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error('📋 useFieldArray is missing `control` prop.');\n    }\n\n    if (!name) {\n      console.warn('📋 useFieldArray is missing `name` attribute.');\n    }\n  }\n\n  const focusIndexRef = React.useRef(-1);\n  const {\n    isWatchAllRef,\n    resetFieldArrayFunctionRef,\n    fieldArrayNamesRef,\n    reRender,\n    fieldsRef,\n    defaultValuesRef,\n    removeFieldEventListener,\n    errorsRef,\n    dirtyFieldsRef,\n    isDirtyRef,\n    touchedFieldsRef,\n    readFormStateRef,\n    watchFieldsRef,\n    validFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayDefaultValues,\n    validateSchemaIsValid,\n    renderWatchedInputs,\n    getValues,\n  } = control || methods.control;\n  let shouldRender;\n\n  const getDefaultValues = () => [\n    ...(get(fieldArrayDefaultValues.current, name) ||\n      get(defaultValuesRef.current, name) ||\n      []),\n  ];\n  const memoizedDefaultValues = React.useRef<Partial<TFieldArrayValues>[]>(\n    getDefaultValues(),\n  );\n  const [fields, setField] = React.useState<\n    Partial<ArrayField<TFieldArrayValues, TKeyName>>[]\n  >(mapIds(memoizedDefaultValues.current, keyName));\n  const allFields = React.useRef<\n    Partial<ArrayField<TFieldArrayValues, TKeyName>>[]\n  >(fields);\n  const rootParentName = getFieldArrayParentName(name);\n\n  const getCurrentFieldsValues = () =>\n    get(getValues() || {}, name, allFields.current).map(\n      (item: Partial<TFieldArrayValues>, index: number) => ({\n        ...allFields.current[index],\n        ...item,\n      }),\n    );\n\n  allFields.current = fields;\n  fieldArrayNamesRef.current.add(name);\n\n  if (!get(fieldArrayDefaultValues.current, name) && rootParentName) {\n    set(\n      fieldArrayDefaultValues.current,\n      rootParentName,\n      get(defaultValuesRef.current, rootParentName),\n    );\n  }\n\n  const appendValueWithKey = (values: Partial<TFieldArrayValues>[]) =>\n    values.map((value: Partial<TFieldArrayValues>) => appendId(value, keyName));\n\n  const setFieldAndValidState = (\n    fieldsValues: Partial<ArrayField<TFieldArrayValues, TKeyName>>[],\n  ) => {\n    setField(fieldsValues);\n\n    if (readFormStateRef.current.isValid && validateSchemaIsValid) {\n      validateSchemaIsValid({\n        [name]: fieldsValues,\n      });\n    }\n  };\n\n  const shouldRenderFieldArray = (shouldRender?: boolean) => {\n    if (\n      readFormStateRef.current.dirtyFields ||\n      readFormStateRef.current.isDirty ||\n      readFormStateRef.current.isValid\n    ) {\n      shouldRender = true;\n    }\n\n    renderWatchedInputs(name);\n\n    shouldRender && !isWatchAllRef.current && reRender();\n  };\n\n  const resetFields = (\n    flagOrFields?: (Partial<TFieldArrayValues> | undefined)[],\n  ) => {\n    if (\n      readFormStateRef.current.isDirty ||\n      readFormStateRef.current.dirtyFields\n    ) {\n      isDirtyRef.current =\n        isUndefined(flagOrFields) ||\n        !deepEqual(\n          flagOrFields.map(({ [keyName]: omitted, ...rest } = {}) => rest),\n          get(defaultValuesRef.current, name, []),\n        );\n    }\n\n    for (const key in fieldsRef.current) {\n      if (isMatchFieldArrayName(key, name) && fieldsRef.current[key]) {\n        removeFieldEventListener(fieldsRef.current[key] as Field, true);\n      }\n    }\n  };\n\n  const append = (\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    shouldRender = false;\n    setFieldAndValidState([\n      ...allFields.current,\n      ...(isArray(value)\n        ? appendValueWithKey(value)\n        : [appendId(value, keyName)]),\n    ]);\n\n    if (\n      readFormStateRef.current.dirtyFields ||\n      readFormStateRef.current.isDirty\n    ) {\n      set(dirtyFieldsRef.current, name, [\n        ...(get(dirtyFieldsRef.current, name) ||\n          fillEmptyArray(fields.slice(0, 1))),\n        ...filterBooleanArray(value),\n      ]);\n      isDirtyRef.current = true;\n      shouldRender = true;\n    }\n\n    focusIndexRef.current = shouldFocus ? allFields.current.length : -1;\n\n    shouldRenderFieldArray(shouldRender);\n  };\n\n  const prepend = (\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    const emptyArray = fillEmptyArray(value);\n    shouldRender = false;\n\n    setFieldAndValidState(\n      prependAt(\n        getCurrentFieldsValues(),\n        isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)],\n      ),\n    );\n    resetFields();\n\n    if (isArray(get(errorsRef.current, name))) {\n      set(\n        errorsRef.current,\n        name,\n        prependAt(get(errorsRef.current, name), emptyArray),\n      );\n    }\n\n    if (\n      readFormStateRef.current.touched &&\n      get(touchedFieldsRef.current, name)\n    ) {\n      set(\n        touchedFieldsRef.current,\n        name,\n        prependAt(get(touchedFieldsRef.current, name), emptyArray),\n      );\n      shouldRender = true;\n    }\n\n    if (\n      readFormStateRef.current.dirtyFields ||\n      readFormStateRef.current.isDirty\n    ) {\n      set(\n        dirtyFieldsRef.current,\n        name,\n        prependAt(\n          get(dirtyFieldsRef.current, name) || [],\n          filterBooleanArray(value),\n        ),\n      );\n      shouldRender = true;\n    }\n\n    shouldRenderFieldArray(shouldRender);\n    focusIndexRef.current = shouldFocus ? 0 : -1;\n  };\n\n  const remove = (index?: number | number[]) => {\n    shouldRender = false;\n\n    const fieldValues = getCurrentFieldsValues();\n    setFieldAndValidState(removeArrayAt(fieldValues, index));\n    resetFields(removeArrayAt(fieldValues, index));\n\n    if (isArray(get(errorsRef.current, name))) {\n      set(\n        errorsRef.current,\n        name,\n        removeArrayAt(get(errorsRef.current, name), index),\n      );\n\n      if (!unique(get(errorsRef.current, name, [])).length) {\n        unset(errorsRef.current, name);\n      }\n    }\n\n    if (\n      readFormStateRef.current.touched &&\n      get(touchedFieldsRef.current, name)\n    ) {\n      set(\n        touchedFieldsRef.current,\n        name,\n        removeArrayAt(get(touchedFieldsRef.current, name), index),\n      );\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      get(dirtyFieldsRef.current, name)\n    ) {\n      set(\n        dirtyFieldsRef.current,\n        name,\n        removeArrayAt(get(dirtyFieldsRef.current, name), index),\n      );\n\n      if (!unique(get(dirtyFieldsRef.current, name, [])).length) {\n        unset(dirtyFieldsRef.current, name);\n      }\n\n      shouldRender = true;\n    }\n\n    if (readFormStateRef.current.isValid && !validateSchemaIsValid) {\n      let fieldIndex = -1;\n      let isFound = false;\n      const isIndexUndefined = isUndefined(index);\n\n      while (fieldIndex++ < fields.length) {\n        const isLast = fieldIndex === fields.length - 1;\n        const isCurrentIndex =\n          (isArray(index) ? index : [index]).indexOf(fieldIndex) >= 0;\n\n        if (isCurrentIndex || isIndexUndefined) {\n          isFound = true;\n        }\n\n        if (!isFound) {\n          continue;\n        }\n\n        for (const key in fields[fieldIndex]) {\n          const currentFieldName = `${name}[${fieldIndex}].${key}`;\n\n          if (isCurrentIndex || isLast || isIndexUndefined) {\n            validFieldsRef.current.delete(currentFieldName);\n            fieldsWithValidationRef.current.delete(currentFieldName);\n          } else {\n            const previousFieldName = `${name}[${fieldIndex - 1}].${key}`;\n\n            if (validFieldsRef.current.has(currentFieldName)) {\n              validFieldsRef.current.add(previousFieldName);\n            }\n            if (fieldsWithValidationRef.current.has(currentFieldName)) {\n              fieldsWithValidationRef.current.add(previousFieldName);\n            }\n          }\n        }\n      }\n    }\n\n    shouldRenderFieldArray(shouldRender);\n  };\n\n  const insert = (\n    index: number,\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    shouldRender = false;\n    const emptyArray = fillEmptyArray(value);\n    const fieldValues = getCurrentFieldsValues();\n\n    setFieldAndValidState(\n      insertAt(\n        fieldValues,\n        index,\n        isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)],\n      ),\n    );\n    resetFields(insertAt(fieldValues, index));\n\n    if (isArray(get(errorsRef.current, name))) {\n      set(\n        errorsRef.current,\n        name,\n        insertAt(get(errorsRef.current, name), index, emptyArray),\n      );\n    }\n\n    if (\n      readFormStateRef.current.touched &&\n      get(touchedFieldsRef.current, name)\n    ) {\n      set(\n        touchedFieldsRef.current,\n        name,\n        insertAt(get(touchedFieldsRef.current, name), index, emptyArray),\n      );\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      get(dirtyFieldsRef.current, name)\n    ) {\n      set(\n        dirtyFieldsRef.current,\n        name,\n        insertAt(\n          get(dirtyFieldsRef.current, name),\n          index,\n          filterBooleanArray(value),\n        ),\n      );\n      shouldRender = true;\n    }\n\n    shouldRenderFieldArray(shouldRender);\n\n    focusIndexRef.current = shouldFocus ? index : -1;\n  };\n\n  const swap = (indexA: number, indexB: number) => {\n    shouldRender = false;\n\n    const fieldValues = getCurrentFieldsValues();\n    swapArrayAt(fieldValues, indexA, indexB);\n    resetFields(fieldValues);\n    setFieldAndValidState([...fieldValues]);\n\n    if (isArray(get(errorsRef.current, name))) {\n      swapArrayAt(get(errorsRef.current, name), indexA, indexB);\n    }\n\n    if (\n      readFormStateRef.current.touched &&\n      get(touchedFieldsRef.current, name)\n    ) {\n      swapArrayAt(get(touchedFieldsRef.current, name), indexA, indexB);\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      get(dirtyFieldsRef.current, name)\n    ) {\n      swapArrayAt(get(dirtyFieldsRef.current, name), indexA, indexB);\n      shouldRender = true;\n    }\n\n    shouldRenderFieldArray(shouldRender);\n  };\n\n  const move = (from: number, to: number) => {\n    shouldRender = false;\n    const fieldValues = getCurrentFieldsValues();\n    moveArrayAt(fieldValues, from, to);\n    resetFields(fieldValues);\n    setFieldAndValidState([...fieldValues]);\n\n    if (isArray(get(errorsRef.current, name))) {\n      moveArrayAt(get(errorsRef.current, name), from, to);\n    }\n\n    if (\n      readFormStateRef.current.touched &&\n      get(touchedFieldsRef.current, name)\n    ) {\n      moveArrayAt(get(touchedFieldsRef.current, name), from, to);\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      get(dirtyFieldsRef.current, name)\n    ) {\n      moveArrayAt(get(dirtyFieldsRef.current, name), from, to);\n      shouldRender = true;\n    }\n\n    shouldRenderFieldArray(shouldRender);\n  };\n\n  const reset = () => {\n    resetFields();\n    memoizedDefaultValues.current = getDefaultValues();\n    setField(mapIds(memoizedDefaultValues.current, keyName));\n  };\n\n  React.useEffect(() => {\n    const defaultValues = get(fieldArrayDefaultValues.current, name);\n\n    if (defaultValues && fields.length < defaultValues.length) {\n      defaultValues.pop();\n      set(fieldArrayDefaultValues.current, name, defaultValues);\n    }\n\n    if (isWatchAllRef.current) {\n      reRender();\n    } else if (watchFieldsRef) {\n      let shouldRenderUseWatch = true;\n      for (const watchField of watchFieldsRef.current) {\n        if (watchField.startsWith(name)) {\n          reRender();\n          shouldRenderUseWatch = false;\n          break;\n        }\n      }\n\n      shouldRenderUseWatch && renderWatchedInputs(name);\n    }\n\n    if (focusIndexRef.current > -1) {\n      for (const key in fieldsRef.current) {\n        const field = fieldsRef.current[key];\n        if (\n          key.startsWith(`${name}[${focusIndexRef.current}]`) &&\n          field!.ref.focus\n        ) {\n          field!.ref.focus();\n          break;\n        }\n      }\n    }\n\n    focusIndexRef.current = -1;\n  }, [\n    fields,\n    name,\n    fieldArrayDefaultValues,\n    reRender,\n    fieldsRef,\n    watchFieldsRef,\n    isWatchAllRef,\n  ]);\n\n  React.useEffect(() => {\n    const resetFunctions = resetFieldArrayFunctionRef.current;\n    resetFunctions[name] = reset;\n\n    return () => {\n      resetFields();\n      delete resetFunctions[name];\n      fieldArrayNamesRef.current.delete(name);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    swap: React.useCallback(swap, [name]),\n    move: React.useCallback(move, [name]),\n    prepend: React.useCallback(prepend, [name]),\n    append: React.useCallback(append, [name]),\n    remove: React.useCallback(remove, [fields, name]),\n    insert: React.useCallback(insert, [name]),\n    fields,\n  };\n};\n","import * as React from 'react';\nimport { useFormContext } from './useFormContext';\nimport isUndefined from './utils/isUndefined';\nimport isString from './utils/isString';\nimport generateId from './logic/generateId';\nimport get from './utils/get';\nimport isArray from './utils/isArray';\nimport {\n  UseWatchOptions,\n  FieldValues,\n  UnpackNestedValue,\n  Control,\n} from './types/form';\nimport { DeepPartial } from './types/utils';\n\nexport function useWatch<TWatchFieldValues extends FieldValues>(props: {\n  defaultValue?: UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\n  control?: Control;\n}): UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\nexport function useWatch<TWatchFieldValue extends any>(props: {\n  name: string;\n  control?: Control;\n}): undefined | UnpackNestedValue<TWatchFieldValue>;\nexport function useWatch<TWatchFieldValue extends any>(props: {\n  name: string;\n  defaultValue: UnpackNestedValue<TWatchFieldValue>;\n  control?: Control;\n}): UnpackNestedValue<TWatchFieldValue>;\nexport function useWatch<TWatchFieldValues extends FieldValues>(props: {\n  name: string[];\n  defaultValue?: UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\n  control?: Control;\n}): UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\nexport function useWatch<TWatchFieldValues>({\n  control,\n  name,\n  defaultValue,\n}: UseWatchOptions): TWatchFieldValues {\n  const methods = useFormContext();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error('📋 useWatch is missing `control` prop.');\n    }\n\n    if (name === '') {\n      console.warn('📋 useWatch is missing `name` attribute.');\n    }\n  }\n\n  const {\n    watchFieldsHookRef,\n    watchFieldsHookRenderRef,\n    watchInternal,\n    defaultValuesRef,\n  } = control || methods.control;\n  const [value, setValue] = React.useState<unknown>(\n    isUndefined(defaultValue)\n      ? isString(name)\n        ? get(defaultValuesRef.current, name)\n        : isArray(name)\n        ? name.reduce(\n            (previous, inputName) => ({\n              ...previous,\n              [inputName]: get(defaultValuesRef.current, inputName),\n            }),\n            {},\n          )\n        : defaultValuesRef.current\n      : defaultValue,\n  );\n  const idRef = React.useRef<string>();\n  const defaultValueRef = React.useRef(defaultValue);\n\n  const updateWatchValue = React.useCallback(\n    () => setValue(watchInternal(name, defaultValueRef.current, idRef.current)),\n    [setValue, watchInternal, defaultValueRef, name, idRef],\n  );\n\n  React.useEffect(() => {\n    const id = (idRef.current = generateId());\n    const watchFieldsHookRender = watchFieldsHookRenderRef.current;\n    const watchFieldsHook = watchFieldsHookRef.current;\n    watchFieldsHook[id] = new Set();\n    watchFieldsHookRender[id] = updateWatchValue;\n    watchInternal(name, defaultValueRef.current, id);\n\n    return () => {\n      delete watchFieldsHook[id];\n      delete watchFieldsHookRender[id];\n    };\n  }, [\n    name,\n    updateWatchValue,\n    watchFieldsHookRenderRef,\n    watchFieldsHookRef,\n    watchInternal,\n    defaultValueRef,\n  ]);\n\n  return (isUndefined(value) ? defaultValue : value) as TWatchFieldValues;\n}\n","import isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\n\nexport default (event: any) =>\n  isPrimitive(event) ||\n  !isObject(event.target) ||\n  (isObject(event.target) && !event.type)\n    ? event\n    : isUndefined(event.target.value)\n    ? event.target.checked\n    : event.target.value;\n","import * as React from 'react';\nimport isUndefined from './utils/isUndefined';\nimport get from './utils/get';\nimport set from './utils/set';\nimport getInputValue from './logic/getInputValue';\nimport skipValidation from './logic/skipValidation';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport { useFormContext } from './useFormContext';\nimport { VALUE } from './constants';\nimport { Control } from './types/form';\nimport { ControllerProps } from './types/props';\n\nconst Controller = <\n  TAs extends\n    | React.ReactElement\n    | React.ComponentType<any>\n    | 'input'\n    | 'select'\n    | 'textarea',\n  TControl extends Control = Control\n>({\n  name,\n  rules,\n  as,\n  render,\n  defaultValue,\n  control,\n  onFocus,\n  ...rest\n}: ControllerProps<TAs, TControl>) => {\n  const methods = useFormContext();\n\n  if (process.env.NODE_ENV !== 'production' && !control && !methods) {\n    throw new Error('📋 Controller is missing `control` prop.');\n  }\n\n  const {\n    defaultValuesRef,\n    setValue,\n    register,\n    unregister,\n    trigger,\n    mode,\n    reValidateMode: { isReValidateOnBlur, isReValidateOnChange },\n    isSubmittedRef,\n    touchedFieldsRef,\n    readFormStateRef,\n    reRender,\n    fieldsRef,\n    fieldArrayNamesRef,\n    unmountFieldsStateRef,\n  } = control || methods.control;\n  const isNotFieldArray = !isNameInFieldArray(fieldArrayNamesRef.current, name);\n  const getInitialValue = () =>\n    !isUndefined(get(unmountFieldsStateRef.current, name)) && isNotFieldArray\n      ? unmountFieldsStateRef.current[name]\n      : isUndefined(defaultValue)\n      ? get(defaultValuesRef.current, name)\n      : defaultValue;\n  const [value, setInputStateValue] = React.useState(getInitialValue());\n  const valueRef = React.useRef(value);\n  const onFocusRef = React.useRef(onFocus);\n  const isSubmitted = isSubmittedRef.current;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isUndefined(value)) {\n      console.warn(\n        '📋 Controller `defaultValue` or useForm `defaultValues` is missing.',\n      );\n    }\n\n    if (as && render) {\n      console.warn('📋 Should use either `as` or `render` prop.');\n    }\n\n    if (!isNotFieldArray && isUndefined(defaultValue)) {\n      console.warn(\n        '📋 Controller is missing `defaultValue` prop when using `useFieldArray`.',\n      );\n    }\n  }\n\n  const shouldValidate = (isBlurEvent?: boolean) =>\n    !skipValidation({\n      isBlurEvent,\n      isReValidateOnBlur,\n      isReValidateOnChange,\n      isSubmitted,\n      ...mode,\n    });\n\n  const commonTask = ([event]: any[]) => {\n    const data = getInputValue(event);\n    setInputStateValue(data);\n    valueRef.current = data;\n    return data;\n  };\n\n  const registerField = React.useCallback(() => {\n    if (process.env.NODE_ENV !== 'production' && !name) {\n      return console.warn('📋 Field is missing `name` prop.');\n    }\n\n    if (fieldsRef.current[name]) {\n      fieldsRef.current[name] = {\n        ref: fieldsRef.current[name]!.ref,\n        ...rules,\n      };\n    } else {\n      register(\n        Object.defineProperty({ name, focus: onFocusRef.current }, VALUE, {\n          set(data) {\n            setInputStateValue(data);\n            valueRef.current = data;\n          },\n          get() {\n            return valueRef.current;\n          },\n        }),\n        rules,\n      );\n      if (isNotFieldArray && !get(defaultValuesRef.current, name)) {\n        setInputStateValue(getInitialValue());\n      }\n    }\n  }, [fieldsRef, rules, name, onFocusRef, register]);\n\n  React.useEffect(\n    () => () => {\n      !isNameInFieldArray(fieldArrayNamesRef.current, name) && unregister(name);\n    },\n    [unregister, name, fieldArrayNamesRef],\n  );\n\n  React.useEffect(() => {\n    registerField();\n  }, [registerField]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  React.useEffect(() => {\n    if (!fieldsRef.current[name]) {\n      registerField();\n      if (isNotFieldArray) {\n        setInputStateValue(getInitialValue());\n      }\n    }\n  });\n\n  const onBlur = () => {\n    if (\n      readFormStateRef.current.touched &&\n      !get(touchedFieldsRef.current, name)\n    ) {\n      set(touchedFieldsRef.current, name, true);\n      reRender();\n    }\n\n    if (shouldValidate(true)) {\n      trigger(name);\n    }\n  };\n\n  const onChange = (...event: any[]) =>\n    setValue(name, commonTask(event), {\n      shouldValidate: shouldValidate(),\n      shouldDirty: true,\n    });\n\n  const props = {\n    ...rest,\n    onChange,\n    onBlur,\n    name,\n    value,\n  };\n\n  return as\n    ? React.isValidElement(as)\n      ? React.cloneElement(as, props)\n      : React.createElement(as as string, props)\n    : render\n    ? render({\n        onChange,\n        onBlur,\n        value,\n      })\n    : null;\n};\n\nexport { Controller };\n"],"names":["value","HTMLElement","EVENTS","BLUR","CHANGE","INPUT","VALIDATION_MODE","onBlur","onChange","onSubmit","all","VALUE","SELECT","UNDEFINED","INPUT_VALIDATION_RULES","max","min","maxLength","minLength","pattern","required","validate","attachEventListeners","_a","shouldAttachChangeEvent","handleChange","ref","isHTMLElement","addEventListener","isObjectType","isNullOrUndefined","isArray","test","input","result","replace","match","mathNumber","mathQuote","originalString","push","set","object","path","index","tempPath","isKey","stringToPath","length","lastIndex","key","newValue","objValue","isObject","isNaN","data","previous","_c","__read","val","undefined","Boolean","obj","defaultValue","unique","split","isUndefined","fields","fieldErrors","get","field","focus","options","validateWithStateUpdate","removeEventListener","defaultReturn","isValid","option","checked","__spread","selected","element","type","defaultResult","validResult","values","attributes","getFieldValue","fieldsRef","name","unmountFieldsStateRef","current","isFileInput","files","isRadioInput","getRadioValue","isMultipleSelect","getMultipleSelectValue","isCheckBox","getCheckboxValue","isDetached","nodeType","Node","DOCUMENT_NODE","parentNode","baseGet","updatePath","unset","childObject","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","isEmptyObject","isSameRef","fieldValue","findRemovedFieldAndRemoveListener","shouldUnregister","forceDelete","mutationWatcher","fieldRef","isCheckBoxInput","options_1","removeAllEventListeners","disconnect","deepMerge","target","source","targetValue","sourceValue","search","output","name_1","isString","transformToNestObject","error","_b","types","message","shouldRenderBasedOnError","errors","validFields","fieldsWithValidation","isFieldValid","isFormValid","currentFieldError","existFieldError","has","isSameError","RegExp","isValueMessage","isRegex","validationData","isValidElement","getValidateError","isMessage","isBoolean","validateAllFieldCriteria","isRadio","isRadioOrCheckbox","isEmpty","appendErrorsCurry","appendErrors","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","requiredValue","requiredMessage","exceedMin","_d","maxValue","maxMessage","_e","minValue","minMessage","valueNumber","valueAsNumber","valueDate","valueAsDate","Date","_f","maxLengthValue","_g","minLengthValue","inputLength","toString","_h","patternValue","patternMessage","getFieldsValue","validateRef","isFunction","_o","validateError","validationResult","_j","__values","_l","validateFunction","validateResult","getPath","getInnerPath","pathWithIndex","isPrimitive","Infinity","fieldValues","fieldName","watchFields","inputValue","isSingleField","add","isOnBlur","isOnChange","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isOnAll","substring","deepEqual","object1","object2","keys1","keys2","keys1_1","val1","val2","isMatchFieldArrayName","searchName","names","onDomRemove","onDetachCallback","observer","MutationObserver","observe","window","document","childList","subtree","mode","isOnSubmit","isWindowUndefined","isWeb","isProxyEnabled","Proxy","useForm","reValidateMode","resolver","context","defaultValues","shouldFocusError","criteriaMode","React.useRef","errorsRef","touchedFieldsRef","fieldArrayDefaultValues","dirtyFieldsRef","watchFieldsRef","watchFieldsHookRef","watchFieldsHookRenderRef","fieldsWithValidationRef","validFieldsRef","isValidRef","defaultValuesRef","defaultValuesAtRenderRef","isUnMount","isWatchAllRef","isSubmittedRef","isDirtyRef","submitCountRef","isSubmittingRef","handleChangeRef","resetFieldArrayFunctionRef","contextRef","resolverRef","fieldArrayNamesRef","React.useState","render","modeRef","modeChecker","isValidateAllFieldCriteria","readFormStateRef","isDirty","dirtyFields","submitCount","touched","isSubmitting","_k","reRender","React.useCallback","shouldRenderBaseOnError","shouldRender","shouldReRender","previousError","delete","setFieldValue","rawValue","radioRef","selectRef","checkboxRef","String","setDirty","isFieldDirty","isDirtyFieldExist","isFieldArray","isNameInFieldArray","previousIsDirty","getValues","getFieldArrayParentName","executeValidation","skipReRender","validateField","executeSchemaOrResolverValidation","payload","previousFormIsValid","isInputsValid","trigger","setInternalValues","shouldDirty","shouldValidate","setInternalValue","config","isFieldWatched","renderWatchedInputs","found","size","setValue","shouldSkipValidation","skipValidation","getFieldsValues","validateResolver","removeFieldEventListener","removeFieldEventListenerAndRef","clearErrors","inputName","setError","watchInternal","fieldNames","watchId","combinedDefaultValues","assignWatchFields","watch","unregister","registerFieldRef","validateOptions","console","warn","fieldRefAndValidationOptions","isRadioOrCheckboxFunction","isEmptyDefaultValue","isEmptyUnmountFields","then","isSelectInput","register","refOrValidationOptions","rules","handleSubmit","callback","e","preventDefault","persist","fieldError","focusOnErrorField","resetRefs","reset","omitResetState","inputRef","closest","resetFieldArray","React.useEffect","formState","commonProps","prop","control","validateSchemaIsValid","FormContext","React.createContext","displayName","useFormContext","React.useContext","FormProvider","children","props","React.createElement","Provider","__assign","d","performance","now","c","r","Math","random","removeAt","removeAtIndexes","from","to","indexA","indexB","temp","prepend","insert","Array","mapValueToBoolean","filterBooleanArray","appendId","keyName","generateId","mapIds","useFieldArray","methods","Error","focusIndexRef","getDefaultValues","memoizedDefaultValues","setField","allFields","rootParentName","getCurrentFieldsValues","appendValueWithKey","setFieldAndValidState","fieldsValues","shouldRenderFieldArray","resetFields","flagOrFields","omitted","rest","append","shouldFocus","fillEmptyArray","emptyArray","prependAt","remove","removeArrayAt","fieldIndex","isFound","isIndexUndefined","isLast","isCurrentIndex","currentFieldName","previousFieldName","insertAt","swap","swapArrayAt","move","moveArrayAt","pop","shouldRenderUseWatch","watchField","resetFunctions","useWatch","idRef","defaultValueRef","updateWatchValue","id","watchFieldsHookRender","watchFieldsHook","event","Controller","as","onFocus","isNotFieldArray","getInitialValue","setInputStateValue","valueRef","onFocusRef","commonTask","getInputValue","registerField","_i","React.isValidElement","React.cloneElement"],"mappings":"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"}